{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/subscribable.js","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/utils.js","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/focusManager.js","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/onlineManager.js","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/retryer.js","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/notifyManager.js","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/logger.js","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/query.js","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/queryObserver.js","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/queryCache.js","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/mutation.js","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/mutationCache.js","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/infiniteQueryBehavior.js","../../node_modules/@sveltestack/svelte-query/svelte/queryCore/core/queryClient.js","../../node_modules/@sveltestack/svelte-query/svelte/queryClientProvider/QueryClientProvider.svelte","../../node_modules/@sveltestack/svelte-query/svelte/queryClientProvider/useQueryClient.js","../../node_modules/svelte/store/index.mjs","../../node_modules/@sveltestack/svelte-query/svelte/utils.js","../../node_modules/@sveltestack/svelte-query/svelte/query/useQuery.js","../../node_modules/svelte-router-spa/src/store.js","../../node_modules/svelte-router-spa/src/router/url_parser.js","../../node_modules/svelte-router-spa/src/lib/utils.js","../../node_modules/svelte-router-spa/src/router/current.js","../../node_modules/svelte-router-spa/src/router/redirect.js","../../node_modules/svelte-router-spa/src/router/guard.js","../../node_modules/svelte-router-spa/src/router/path.js","../../node_modules/svelte-router-spa/src/router/finder.js","../../node_modules/svelte-router-spa/src/router/route.js","../../node_modules/svelte-router-spa/src/spa_router.js","../../node_modules/svelte-router-spa/src/components/route.svelte","../../node_modules/svelte-router-spa/src/components/router.svelte","../../src/components/Page/Index.svelte","../../src/components/Page/NotFound.svelte","../../src/components/Placeholder/CardPlaceholder.svelte","../../src/components/Card/Card.svelte","../../src/components/Blog/Blog.svelte","../../src/api/blog.ts","../../src/components/Navbar/Navbar.svelte","../../src/components/Footer/Footer.svelte","../../src/layout/MainLayout.svelte","../../src/routes/index.ts","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root.host) {\n        return root;\n    }\n    return document;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export class Subscribable {\n    constructor() {\n        this.listeners = [];\n    }\n    subscribe(listener) {\n        const callback = listener || (() => undefined);\n        this.listeners.push(callback);\n        this.onSubscribe();\n        return () => {\n            this.listeners = this.listeners.filter(x => x !== callback);\n            this.onUnsubscribe();\n        };\n    }\n    hasListeners() {\n        return this.listeners.length > 0;\n    }\n    onSubscribe() {\n        // Do nothing\n    }\n    onUnsubscribe() {\n        // Do nothing\n    }\n}\n","import './types';\n// UTILS\nexport const isServer = typeof window === 'undefined';\nexport function noop() {\n    return undefined;\n}\nexport function functionalUpdate(updater, input) {\n    return typeof updater === 'function'\n        ? updater(input)\n        : updater;\n}\nexport function isValidTimeout(value) {\n    return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nexport function ensureQueryKeyArray(value) {\n    return (Array.isArray(value)\n        ? value\n        : [value]);\n}\nexport function difference(array1, array2) {\n    return array1.filter(x => array2.indexOf(x) === -1);\n}\nexport function replaceAt(array, index, value) {\n    const copy = array.slice(0);\n    copy[index] = value;\n    return copy;\n}\nexport function timeUntilStale(updatedAt, staleTime) {\n    return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nexport function parseQueryArgs(arg1, arg2, arg3) {\n    if (!isQueryKey(arg1)) {\n        return arg1;\n    }\n    if (typeof arg2 === 'function') {\n        return Object.assign(Object.assign({}, arg3), { queryKey: arg1, queryFn: arg2 });\n    }\n    return Object.assign(Object.assign({}, arg2), { queryKey: arg1 });\n}\nexport function parseMutationArgs(arg1, arg2, arg3) {\n    if (isQueryKey(arg1)) {\n        if (typeof arg2 === 'function') {\n            return Object.assign(Object.assign({}, arg3), { mutationKey: arg1, mutationFn: arg2 });\n        }\n        return Object.assign(Object.assign({}, arg2), { mutationKey: arg1 });\n    }\n    if (typeof arg1 === 'function') {\n        return Object.assign(Object.assign({}, arg2), { mutationFn: arg1 });\n    }\n    return Object.assign({}, arg1);\n}\nexport function parseFilterArgs(arg1, arg2, arg3) {\n    return (isQueryKey(arg1)\n        ? [Object.assign(Object.assign({}, arg2), { queryKey: arg1 }), arg3]\n        : [arg1 || {}, arg2]);\n}\nexport function parseMutationFilterArgs(arg1, arg2) {\n    return isQueryKey(arg1) ? Object.assign(Object.assign({}, arg2), { mutationKey: arg1 }) : arg1;\n}\nexport function mapQueryStatusFilter(active, inactive) {\n    if ((active === true && inactive === true) ||\n        (active == null && inactive == null)) {\n        return 'all';\n    }\n    else if (active === false && inactive === false) {\n        return 'none';\n    }\n    else {\n        // At this point, active|inactive can only be true|false or false|true\n        // so, when only one value is provided, the missing one has to be the negated value\n        const isActive = active !== null && active !== void 0 ? active : !inactive;\n        return isActive ? 'active' : 'inactive';\n    }\n}\nexport function matchQuery(filters, query) {\n    const { active, exact, fetching, inactive, predicate, queryKey, stale, } = filters;\n    if (isQueryKey(queryKey)) {\n        if (exact) {\n            if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n                return false;\n            }\n        }\n        else if (!partialMatchKey(query.queryKey, queryKey)) {\n            return false;\n        }\n    }\n    const queryStatusFilter = mapQueryStatusFilter(active, inactive);\n    if (queryStatusFilter === 'none') {\n        return false;\n    }\n    else if (queryStatusFilter !== 'all') {\n        const isActive = query.isActive();\n        if (queryStatusFilter === 'active' && !isActive) {\n            return false;\n        }\n        if (queryStatusFilter === 'inactive' && isActive) {\n            return false;\n        }\n    }\n    if (typeof stale === 'boolean' && query.isStale() !== stale) {\n        return false;\n    }\n    if (typeof fetching === 'boolean' && query.isFetching() !== fetching) {\n        return false;\n    }\n    if (predicate && !predicate(query)) {\n        return false;\n    }\n    return true;\n}\nexport function matchMutation(filters, mutation) {\n    const { exact, fetching, predicate, mutationKey } = filters;\n    if (isQueryKey(mutationKey)) {\n        if (!mutation.options.mutationKey) {\n            return false;\n        }\n        if (exact) {\n            if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n                return false;\n            }\n        }\n        else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n            return false;\n        }\n    }\n    if (typeof fetching === 'boolean' &&\n        (mutation.state.status === 'loading') !== fetching) {\n        return false;\n    }\n    if (predicate && !predicate(mutation)) {\n        return false;\n    }\n    return true;\n}\nexport function hashQueryKeyByOptions(queryKey, options) {\n    const hashFn = (options === null || options === void 0 ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n    return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n */\nexport function hashQueryKey(queryKey) {\n    const asArray = ensureQueryKeyArray(queryKey);\n    return stableValueHash(asArray);\n}\n/**\n * Hashes the value into a stable hash.\n */\nexport function stableValueHash(value) {\n    return JSON.stringify(value, (_, val) => isPlainObject(val)\n        ? Object.keys(val)\n            .sort()\n            .reduce((result, key) => {\n            result[key] = val[key];\n            return result;\n        }, {})\n        : val);\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\nexport function partialMatchKey(a, b) {\n    return partialDeepEqual(ensureQueryKeyArray(a), ensureQueryKeyArray(b));\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\nexport function partialDeepEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (typeof a !== typeof b) {\n        return false;\n    }\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\n        return !Object.keys(b).some(key => !partialDeepEqual(a[key], b[key]));\n    }\n    return false;\n}\nexport function replaceEqualDeep(a, b) {\n    if (a === b) {\n        return a;\n    }\n    const array = Array.isArray(a) && Array.isArray(b);\n    if (array || (isPlainObject(a) && isPlainObject(b))) {\n        const aSize = array ? a.length : Object.keys(a).length;\n        const bItems = array ? b : Object.keys(b);\n        const bSize = bItems.length;\n        const copy = array ? [] : {};\n        let equalItems = 0;\n        for (let i = 0; i < bSize; i++) {\n            const key = array ? i : bItems[i];\n            copy[key] = replaceEqualDeep(a[key], b[key]);\n            if (copy[key] === a[key]) {\n                equalItems++;\n            }\n        }\n        return aSize === bSize && equalItems === aSize ? a : copy;\n    }\n    return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\nexport function shallowEqualObjects(a, b) {\n    if ((a && !b) || (b && !a)) {\n        return false;\n    }\n    for (const key in a) {\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nexport function isPlainObject(o) {\n    if (!hasObjectPrototype(o)) {\n        return false;\n    }\n    // If has modified constructor\n    const ctor = o.constructor;\n    if (typeof ctor === 'undefined') {\n        return true;\n    }\n    // If has modified prototype\n    const prot = ctor.prototype;\n    if (!hasObjectPrototype(prot)) {\n        return false;\n    }\n    // If constructor does not have an Object-specific method\n    if (!prot.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n    // Most likely a plain Object\n    return true;\n}\nfunction hasObjectPrototype(o) {\n    return Object.prototype.toString.call(o) === '[object Object]';\n}\nexport function isQueryKey(value) {\n    return typeof value === 'string' || Array.isArray(value);\n}\nexport function isError(value) {\n    return value instanceof Error;\n}\nexport function sleep(timeout) {\n    return new Promise(resolve => {\n        setTimeout(resolve, timeout);\n    });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\nexport function scheduleMicrotask(callback) {\n    Promise.resolve()\n        .then(callback)\n        .catch(error => setTimeout(() => {\n        throw error;\n    }));\n}\nexport function getAbortController() {\n    if (typeof AbortController === 'function') {\n        return new AbortController();\n    }\n}\n","import { Subscribable } from './subscribable';\nimport { isServer } from './utils';\nexport class FocusManager extends Subscribable {\n    constructor() {\n        super();\n        this.setup = onFocus => {\n            if (!isServer && (window === null || window === void 0 ? void 0 : window.addEventListener)) {\n                const listener = () => onFocus();\n                // Listen to visibillitychange and focus\n                window.addEventListener('visibilitychange', listener, false);\n                window.addEventListener('focus', listener, false);\n                return () => {\n                    // Be sure to unsubscribe if a new handler is set\n                    window.removeEventListener('visibilitychange', listener);\n                    window.removeEventListener('focus', listener);\n                };\n            }\n        };\n    }\n    onSubscribe() {\n        if (!this.cleanup) {\n            this.setEventListener(this.setup);\n        }\n    }\n    onUnsubscribe() {\n        var _a;\n        if (!this.hasListeners()) {\n            (_a = this.cleanup) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.cleanup = undefined;\n        }\n    }\n    setEventListener(setup) {\n        var _a;\n        this.setup = setup;\n        (_a = this.cleanup) === null || _a === void 0 ? void 0 : _a.call(this);\n        this.cleanup = setup(focused => {\n            if (typeof focused === 'boolean') {\n                this.setFocused(focused);\n            }\n            else {\n                this.onFocus();\n            }\n        });\n    }\n    setFocused(focused) {\n        this.focused = focused;\n        if (focused) {\n            this.onFocus();\n        }\n    }\n    onFocus() {\n        this.listeners.forEach(listener => {\n            listener();\n        });\n    }\n    isFocused() {\n        if (typeof this.focused === 'boolean') {\n            return this.focused;\n        }\n        // document global can be unavailable in react native\n        if (typeof document === 'undefined') {\n            return true;\n        }\n        return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n    }\n}\nexport const focusManager = new FocusManager();\n","import { Subscribable } from './subscribable';\nimport { isServer } from './utils';\nexport class OnlineManager extends Subscribable {\n    constructor() {\n        super();\n        this.setup = onOnline => {\n            if (!isServer && (window === null || window === void 0 ? void 0 : window.addEventListener)) {\n                const listener = () => onOnline();\n                // Listen to online\n                window.addEventListener('online', listener, false);\n                window.addEventListener('offline', listener, false);\n                return () => {\n                    // Be sure to unsubscribe if a new handler is set\n                    window.removeEventListener('online', listener);\n                    window.removeEventListener('offline', listener);\n                };\n            }\n        };\n    }\n    onSubscribe() {\n        if (!this.cleanup) {\n            this.setEventListener(this.setup);\n        }\n    }\n    onUnsubscribe() {\n        var _a;\n        if (!this.hasListeners()) {\n            (_a = this.cleanup) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.cleanup = undefined;\n        }\n    }\n    setEventListener(setup) {\n        var _a;\n        this.setup = setup;\n        (_a = this.cleanup) === null || _a === void 0 ? void 0 : _a.call(this);\n        this.cleanup = setup((online) => {\n            if (typeof online === 'boolean') {\n                this.setOnline(online);\n            }\n            else {\n                this.onOnline();\n            }\n        });\n    }\n    setOnline(online) {\n        this.online = online;\n        if (online) {\n            this.onOnline();\n        }\n    }\n    onOnline() {\n        this.listeners.forEach(listener => {\n            listener();\n        });\n    }\n    isOnline() {\n        if (typeof this.online === 'boolean') {\n            return this.online;\n        }\n        if (typeof navigator === 'undefined' ||\n            typeof navigator.onLine === 'undefined') {\n            return true;\n        }\n        return navigator.onLine;\n    }\n}\nexport const onlineManager = new OnlineManager();\n","import { focusManager } from './focusManager';\nimport { onlineManager } from './onlineManager';\nimport { sleep } from './utils';\nimport './types';\nfunction defaultRetryDelay(failureCount) {\n    return Math.min(1000 * 2 ** failureCount, 30000);\n}\nexport function isCancelable(value) {\n    return typeof (value === null || value === void 0 ? void 0 : value.cancel) === 'function';\n}\nexport class CancelledError {\n    constructor(options) {\n        this.revert = options === null || options === void 0 ? void 0 : options.revert;\n        this.silent = options === null || options === void 0 ? void 0 : options.silent;\n    }\n}\nexport function isCancelledError(value) {\n    return value instanceof CancelledError;\n}\n// CLASS\nexport class Retryer {\n    constructor(config) {\n        let cancelRetry = false;\n        let cancelFn;\n        let continueFn;\n        let promiseResolve;\n        let promiseReject;\n        this.abort = config.abort;\n        this.cancel = cancelOptions => cancelFn === null || cancelFn === void 0 ? void 0 : cancelFn(cancelOptions);\n        this.cancelRetry = () => {\n            cancelRetry = true;\n        };\n        this.continueRetry = () => {\n            cancelRetry = false;\n        };\n        this.continue = () => continueFn === null || continueFn === void 0 ? void 0 : continueFn();\n        this.failureCount = 0;\n        this.isPaused = false;\n        this.isResolved = false;\n        this.isTransportCancelable = false;\n        this.promise = new Promise((outerResolve, outerReject) => {\n            promiseResolve = outerResolve;\n            promiseReject = outerReject;\n        });\n        const resolve = (value) => {\n            var _a;\n            if (!this.isResolved) {\n                this.isResolved = true;\n                (_a = config.onSuccess) === null || _a === void 0 ? void 0 : _a.call(config, value);\n                continueFn === null || continueFn === void 0 ? void 0 : continueFn();\n                promiseResolve(value);\n            }\n        };\n        const reject = (value) => {\n            var _a;\n            if (!this.isResolved) {\n                this.isResolved = true;\n                (_a = config.onError) === null || _a === void 0 ? void 0 : _a.call(config, value);\n                continueFn === null || continueFn === void 0 ? void 0 : continueFn();\n                promiseReject(value);\n            }\n        };\n        const pause = () => {\n            return new Promise(continueResolve => {\n                var _a;\n                continueFn = continueResolve;\n                this.isPaused = true;\n                (_a = config.onPause) === null || _a === void 0 ? void 0 : _a.call(config);\n            }).then(() => {\n                var _a;\n                continueFn = undefined;\n                this.isPaused = false;\n                (_a = config.onContinue) === null || _a === void 0 ? void 0 : _a.call(config);\n            });\n        };\n        // Create loop function\n        const run = () => {\n            // Do nothing if already resolved\n            if (this.isResolved) {\n                return;\n            }\n            let promiseOrValue;\n            // Execute query\n            try {\n                promiseOrValue = config.fn();\n            }\n            catch (error) {\n                promiseOrValue = Promise.reject(error);\n            }\n            // Create callback to cancel this fetch\n            cancelFn = cancelOptions => {\n                var _a;\n                if (!this.isResolved) {\n                    reject(new CancelledError(cancelOptions));\n                    (_a = this.abort) === null || _a === void 0 ? void 0 : _a.call(this);\n                    // Cancel transport if supported\n                    if (isCancelable(promiseOrValue)) {\n                        try {\n                            promiseOrValue.cancel();\n                        }\n                        catch (_b) { }\n                    }\n                }\n            };\n            // Check if the transport layer support cancellation\n            this.isTransportCancelable = isCancelable(promiseOrValue);\n            Promise.resolve(promiseOrValue)\n                .then(resolve)\n                .catch(error => {\n                var _a, _b, _c;\n                // Stop if the fetch is already resolved\n                if (this.isResolved) {\n                    return;\n                }\n                // Do we need to retry the request?\n                const retry = (_a = config.retry) !== null && _a !== void 0 ? _a : 3;\n                const retryDelay = (_b = config.retryDelay) !== null && _b !== void 0 ? _b : defaultRetryDelay;\n                const delay = typeof retryDelay === 'function'\n                    ? retryDelay(this.failureCount, error)\n                    : retryDelay;\n                const shouldRetry = retry === true ||\n                    (typeof retry === 'number' && this.failureCount < retry) ||\n                    (typeof retry === 'function' && retry(this.failureCount, error));\n                if (cancelRetry || !shouldRetry) {\n                    // We are done if the query does not need to be retried\n                    reject(error);\n                    return;\n                }\n                this.failureCount++;\n                // Notify on fail\n                (_c = config.onFail) === null || _c === void 0 ? void 0 : _c.call(config, this.failureCount, error);\n                // Delay\n                sleep(delay)\n                    // Pause if the document is not visible or when the device is offline\n                    .then(() => {\n                    if (!focusManager.isFocused() || !onlineManager.isOnline()) {\n                        return pause();\n                    }\n                })\n                    .then(() => {\n                    if (cancelRetry) {\n                        reject(error);\n                    }\n                    else {\n                        run();\n                    }\n                });\n            });\n        };\n        // Start loop\n        run();\n    }\n}\n","import { scheduleMicrotask } from './utils';\n// CLASS\nexport class NotifyManager {\n    constructor() {\n        this.queue = [];\n        this.transactions = 0;\n        this.notifyFn = (callback) => {\n            callback();\n        };\n        this.batchNotifyFn = (callback) => {\n            callback();\n        };\n    }\n    batch(callback) {\n        let result;\n        this.transactions++;\n        try {\n            result = callback();\n        }\n        finally {\n            this.transactions--;\n            if (!this.transactions) {\n                this.flush();\n            }\n        }\n        return result;\n    }\n    schedule(callback) {\n        if (this.transactions) {\n            this.queue.push(callback);\n        }\n        else {\n            scheduleMicrotask(() => {\n                this.notifyFn(callback);\n            });\n        }\n    }\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls(callback) {\n        return ((...args) => {\n            this.schedule(() => {\n                callback(...args);\n            });\n        });\n    }\n    flush() {\n        const queue = this.queue;\n        this.queue = [];\n        if (queue.length) {\n            scheduleMicrotask(() => {\n                this.batchNotifyFn(() => {\n                    queue.forEach(callback => {\n                        this.notifyFn(callback);\n                    });\n                });\n            });\n        }\n    }\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction(fn) {\n        this.notifyFn = fn;\n    }\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction(fn) {\n        this.batchNotifyFn = fn;\n    }\n}\n// SINGLETON\nexport const notifyManager = new NotifyManager();\n","// TYPES\n// FUNCTIONS\nlet logger = console;\nexport function getLogger() {\n    return logger;\n}\nexport function setLogger(newLogger) {\n    logger = newLogger;\n}\n","import { getAbortController, functionalUpdate, isValidTimeout, noop, replaceEqualDeep, timeUntilStale, ensureQueryKeyArray, } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { getLogger } from './logger';\nimport { Retryer, isCancelledError } from './retryer';\n// CLASS\nexport class Query {\n    constructor(config) {\n        this.abortSignalConsumed = false;\n        this.hadObservers = false;\n        this.defaultOptions = config.defaultOptions;\n        this.setOptions(config.options);\n        this.observers = [];\n        this.cache = config.cache;\n        this.queryKey = config.queryKey;\n        this.queryHash = config.queryHash;\n        this.initialState = config.state || this.getDefaultState(this.options);\n        this.state = this.initialState;\n        this.meta = config.meta;\n        this.scheduleGc();\n    }\n    setOptions(options) {\n        var _a;\n        this.options = Object.assign(Object.assign({}, this.defaultOptions), options);\n        this.meta = options === null || options === void 0 ? void 0 : options.meta;\n        // Default to 5 minutes if not cache time is set\n        this.cacheTime = Math.max(this.cacheTime || 0, (_a = this.options.cacheTime) !== null && _a !== void 0 ? _a : 5 * 60 * 1000);\n    }\n    setDefaultOptions(options) {\n        this.defaultOptions = options;\n    }\n    scheduleGc() {\n        this.clearGcTimeout();\n        if (isValidTimeout(this.cacheTime)) {\n            // @ts-ignore\n            this.gcTimeout = setTimeout(() => {\n                this.optionalRemove();\n            }, this.cacheTime);\n        }\n    }\n    clearGcTimeout() {\n        clearTimeout(this.gcTimeout);\n        this.gcTimeout = undefined;\n    }\n    optionalRemove() {\n        if (!this.observers.length) {\n            if (this.state.isFetching) {\n                if (this.hadObservers) {\n                    this.scheduleGc();\n                }\n            }\n            else {\n                this.cache.remove(this);\n            }\n        }\n    }\n    setData(updater, options) {\n        var _a, _b;\n        const prevData = this.state.data;\n        // Get the new data\n        let data = functionalUpdate(updater, prevData);\n        // Use prev data if an isDataEqual function is defined and returns `true`\n        if ((_b = (_a = this.options).isDataEqual) === null || _b === void 0 ? void 0 : _b.call(_a, prevData, data)) {\n            data = prevData;\n        }\n        else if (this.options.structuralSharing !== false) {\n            // Structurally share data between prev and new data if needed\n            data = replaceEqualDeep(prevData, data);\n        }\n        // Set data and mark it as cached\n        this.dispatch({\n            data,\n            type: 'success',\n            dataUpdatedAt: options === null || options === void 0 ? void 0 : options.updatedAt,\n        });\n        return data;\n    }\n    setState(state, setStateOptions) {\n        this.dispatch({ type: 'setState', state, setStateOptions });\n    }\n    cancel(options) {\n        var _a;\n        const promise = this.promise;\n        (_a = this.retryer) === null || _a === void 0 ? void 0 : _a.cancel(options);\n        return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n    }\n    destroy() {\n        this.clearGcTimeout();\n        this.cancel({ silent: true });\n    }\n    reset() {\n        this.destroy();\n        this.setState(this.initialState);\n    }\n    isActive() {\n        return this.observers.some(observer => observer.options.enabled !== false);\n    }\n    isFetching() {\n        return this.state.isFetching;\n    }\n    isStale() {\n        return (this.state.isInvalidated ||\n            !this.state.dataUpdatedAt ||\n            this.observers.some(observer => observer.getCurrentResult().isStale));\n    }\n    isStaleByTime(staleTime = 0) {\n        return (this.state.isInvalidated ||\n            !this.state.dataUpdatedAt ||\n            !timeUntilStale(this.state.dataUpdatedAt, staleTime));\n    }\n    onFocus() {\n        var _a;\n        const observer = this.observers.find(x => x.shouldFetchOnWindowFocus());\n        if (observer) {\n            observer.refetch();\n        }\n        // Continue fetch if currently paused\n        (_a = this.retryer) === null || _a === void 0 ? void 0 : _a.continue();\n    }\n    onOnline() {\n        var _a;\n        const observer = this.observers.find(x => x.shouldFetchOnReconnect());\n        if (observer) {\n            observer.refetch();\n        }\n        // Continue fetch if currently paused\n        (_a = this.retryer) === null || _a === void 0 ? void 0 : _a.continue();\n    }\n    addObserver(observer) {\n        if (this.observers.indexOf(observer) === -1) {\n            this.observers.push(observer);\n            this.hadObservers = true;\n            // Stop the query from being garbage collected\n            this.clearGcTimeout();\n            this.cache.notify({ type: 'observerAdded', query: this, observer });\n        }\n    }\n    removeObserver(observer) {\n        if (this.observers.indexOf(observer) !== -1) {\n            this.observers = this.observers.filter(x => x !== observer);\n            if (!this.observers.length) {\n                // If the transport layer does not support cancellation\n                // we'll let the query continue so the result can be cached\n                if (this.retryer) {\n                    if (this.retryer.isTransportCancelable || this.abortSignalConsumed) {\n                        this.retryer.cancel({ revert: true });\n                    }\n                    else {\n                        this.retryer.cancelRetry();\n                    }\n                }\n                if (this.cacheTime) {\n                    this.scheduleGc();\n                }\n                else {\n                    this.cache.remove(this);\n                }\n            }\n            this.cache.notify({ type: 'observerRemoved', query: this, observer });\n        }\n    }\n    getObserversCount() {\n        return this.observers.length;\n    }\n    invalidate() {\n        if (!this.state.isInvalidated) {\n            this.dispatch({ type: 'invalidate' });\n        }\n    }\n    fetch(options, fetchOptions) {\n        var _a, _b, _c, _d, _e, _f;\n        if (this.state.isFetching) {\n            if (this.state.dataUpdatedAt && (fetchOptions === null || fetchOptions === void 0 ? void 0 : fetchOptions.cancelRefetch)) {\n                // Silently cancel current fetch if the user wants to cancel refetches\n                this.cancel({ silent: true });\n            }\n            else if (this.promise) {\n                // make sure that retries that were potentially cancelled due to unmounts can continue\n                (_a = this.retryer) === null || _a === void 0 ? void 0 : _a.continueRetry();\n                // Return current promise if we are already fetching\n                return this.promise;\n            }\n        }\n        // Update config if passed, otherwise the config from the last execution is used\n        if (options) {\n            this.setOptions(options);\n        }\n        // Use the options from the first observer with a query function if no function is found.\n        // This can happen when the query is hydrated or created with setQueryData.\n        if (!this.options.queryFn) {\n            const observer = this.observers.find(x => x.options.queryFn);\n            if (observer) {\n                this.setOptions(observer.options);\n            }\n        }\n        const queryKey = ensureQueryKeyArray(this.queryKey);\n        const abortController = getAbortController();\n        // Create query function context\n        const queryFnContext = {\n            queryKey,\n            pageParam: undefined,\n            meta: this.meta,\n        };\n        Object.defineProperty(queryFnContext, 'signal', {\n            enumerable: true,\n            get: () => {\n                if (abortController) {\n                    this.abortSignalConsumed = true;\n                    return abortController.signal;\n                }\n                return undefined;\n            },\n        });\n        // Create fetch function\n        const fetchFn = () => {\n            if (!this.options.queryFn) {\n                return Promise.reject('Missing queryFn');\n            }\n            this.abortSignalConsumed = false;\n            return this.options.queryFn(queryFnContext);\n        };\n        // Trigger behavior hook\n        const context = {\n            fetchOptions,\n            options: this.options,\n            queryKey: queryKey,\n            state: this.state,\n            fetchFn,\n            meta: this.meta,\n        };\n        if ((_b = this.options.behavior) === null || _b === void 0 ? void 0 : _b.onFetch) {\n            (_c = this.options.behavior) === null || _c === void 0 ? void 0 : _c.onFetch(context);\n        }\n        // Store state in case the current fetch needs to be reverted\n        this.revertState = this.state;\n        // Set to fetching state if not already in it\n        if (!this.state.isFetching ||\n            this.state.fetchMeta !== ((_d = context.fetchOptions) === null || _d === void 0 ? void 0 : _d.meta)) {\n            this.dispatch({ type: 'fetch', meta: (_e = context.fetchOptions) === null || _e === void 0 ? void 0 : _e.meta });\n        }\n        // Try to fetch the data\n        this.retryer = new Retryer({\n            fn: context.fetchFn,\n            abort: (_f = abortController === null || abortController === void 0 ? void 0 : abortController.abort) === null || _f === void 0 ? void 0 : _f.bind(abortController),\n            onSuccess: data => {\n                var _a, _b;\n                this.setData(data);\n                // Notify cache callback\n                (_b = (_a = this.cache.config).onSuccess) === null || _b === void 0 ? void 0 : _b.call(_a, data, this);\n                // Remove query after fetching if cache time is 0\n                if (this.cacheTime === 0) {\n                    this.optionalRemove();\n                }\n            },\n            onError: (error) => {\n                var _a, _b;\n                // Optimistically update state if needed\n                if (!(isCancelledError(error) && error.silent)) {\n                    this.dispatch({\n                        type: 'error',\n                        error: error,\n                    });\n                }\n                if (!isCancelledError(error)) {\n                    // Notify cache callback\n                    (_b = (_a = this.cache.config).onError) === null || _b === void 0 ? void 0 : _b.call(_a, error, this);\n                    // Log error\n                    getLogger().error(error);\n                }\n                // Remove query after fetching if cache time is 0\n                if (this.cacheTime === 0) {\n                    this.optionalRemove();\n                }\n            },\n            onFail: () => {\n                this.dispatch({ type: 'failed' });\n            },\n            onPause: () => {\n                this.dispatch({ type: 'pause' });\n            },\n            onContinue: () => {\n                this.dispatch({ type: 'continue' });\n            },\n            retry: context.options.retry,\n            retryDelay: context.options.retryDelay,\n        });\n        this.promise = this.retryer.promise;\n        return this.promise;\n    }\n    dispatch(action) {\n        this.state = this.reducer(this.state, action);\n        notifyManager.batch(() => {\n            this.observers.forEach(observer => {\n                observer.onQueryUpdate(action);\n            });\n            this.cache.notify({ query: this, type: 'queryUpdated', action });\n        });\n    }\n    getDefaultState(options) {\n        const data = typeof options.initialData === 'function'\n            ? options.initialData()\n            : options.initialData;\n        const hasInitialData = typeof options.initialData !== 'undefined';\n        const initialDataUpdatedAt = hasInitialData\n            ? typeof options.initialDataUpdatedAt === 'function'\n                ? options.initialDataUpdatedAt()\n                : options.initialDataUpdatedAt\n            : 0;\n        const hasData = typeof data !== 'undefined';\n        return {\n            data,\n            dataUpdateCount: 0,\n            dataUpdatedAt: hasData ? initialDataUpdatedAt !== null && initialDataUpdatedAt !== void 0 ? initialDataUpdatedAt : Date.now() : 0,\n            error: null,\n            errorUpdateCount: 0,\n            errorUpdatedAt: 0,\n            fetchFailureCount: 0,\n            fetchMeta: null,\n            isFetching: false,\n            isInvalidated: false,\n            isPaused: false,\n            status: hasData ? 'success' : 'idle',\n        };\n    }\n    reducer(state, action) {\n        var _a, _b;\n        switch (action.type) {\n            case 'failed':\n                return Object.assign(Object.assign({}, state), { fetchFailureCount: state.fetchFailureCount + 1 });\n            case 'pause':\n                return Object.assign(Object.assign({}, state), { isPaused: true });\n            case 'continue':\n                return Object.assign(Object.assign({}, state), { isPaused: false });\n            case 'fetch':\n                return Object.assign(Object.assign(Object.assign({}, state), { fetchFailureCount: 0, fetchMeta: (_a = action.meta) !== null && _a !== void 0 ? _a : null, isFetching: true, isPaused: false }), (!state.dataUpdatedAt && {\n                    error: null,\n                    status: 'loading',\n                }));\n            case 'success':\n                return Object.assign(Object.assign({}, state), { data: action.data, dataUpdateCount: state.dataUpdateCount + 1, dataUpdatedAt: (_b = action.dataUpdatedAt) !== null && _b !== void 0 ? _b : Date.now(), error: null, fetchFailureCount: 0, isFetching: false, isInvalidated: false, isPaused: false, status: 'success' });\n            case 'error':\n                const error = action.error;\n                if (isCancelledError(error) && error.revert && this.revertState) {\n                    return Object.assign({}, this.revertState);\n                }\n                return Object.assign(Object.assign({}, state), { error: error, errorUpdateCount: state.errorUpdateCount + 1, errorUpdatedAt: Date.now(), fetchFailureCount: state.fetchFailureCount + 1, isFetching: false, isPaused: false, status: 'error' });\n            case 'invalidate':\n                return Object.assign(Object.assign({}, state), { isInvalidated: true });\n            case 'setState':\n                return Object.assign(Object.assign({}, state), action.state);\n            default:\n                return state;\n        }\n    }\n}\n","import './types';\nimport { hashQueryKeyByOptions, isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale, } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport class QueryObserver extends Subscribable {\n    constructor(client, options) {\n        super();\n        this.client = client;\n        this.options = options;\n        this.trackedProps = [];\n        this.previousSelectError = null;\n        this.bindMethods();\n        this.setOptions(options);\n    }\n    bindMethods() {\n        this.remove = this.remove.bind(this);\n        this.refetch = this.refetch.bind(this);\n    }\n    onSubscribe() {\n        if (this.listeners.length === 1) {\n            this.currentQuery.addObserver(this);\n            if (shouldFetchOnMount(this.currentQuery, this.options)) {\n                this.executeFetch();\n            }\n            this.updateTimers();\n        }\n    }\n    onUnsubscribe() {\n        if (!this.listeners.length) {\n            this.destroy();\n        }\n    }\n    shouldFetchOnReconnect() {\n        return shouldFetchOnReconnect(this.currentQuery, this.options);\n    }\n    shouldFetchOnWindowFocus() {\n        return shouldFetchOnWindowFocus(this.currentQuery, this.options);\n    }\n    destroy() {\n        this.listeners = [];\n        this.clearTimers();\n        this.currentQuery.removeObserver(this);\n    }\n    setOptions(options, notifyOptions) {\n        const prevOptions = this.options;\n        const prevQuery = this.currentQuery;\n        this.options = this.client.defaultQueryObserverOptions(options);\n        if (typeof this.options.enabled !== 'undefined' &&\n            typeof this.options.enabled !== 'boolean') {\n            throw new Error('Expected enabled to be a boolean');\n        }\n        // Keep previous query key if the user does not supply one\n        if (!this.options.queryKey) {\n            this.options.queryKey = prevOptions.queryKey;\n        }\n        this.updateQuery();\n        const mounted = this.hasListeners();\n        // Fetch if there are subscribers\n        if (mounted &&\n            shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n            this.executeFetch();\n        }\n        // Update result\n        this.updateResult(notifyOptions);\n        // Update stale interval if needed\n        if (mounted &&\n            (this.currentQuery !== prevQuery ||\n                this.options.enabled !== prevOptions.enabled ||\n                this.options.staleTime !== prevOptions.staleTime)) {\n            this.updateStaleTimeout();\n        }\n        const nextRefetchInterval = this.computeRefetchInterval();\n        // Update refetch interval if needed\n        if (mounted &&\n            (this.currentQuery !== prevQuery ||\n                this.options.enabled !== prevOptions.enabled ||\n                nextRefetchInterval !== this.currentRefetchInterval)) {\n            this.updateRefetchInterval(nextRefetchInterval);\n        }\n    }\n    updateOptions(options, notifyOptions) {\n        const mergedOptions = Object.assign(Object.assign({}, this.options), options);\n        if (options.queryKey && !options.queryHash && options.queryKey !== this.options.queryKey) {\n            mergedOptions.queryHash = hashQueryKeyByOptions(options.queryKey, mergedOptions);\n        }\n        this.setOptions(mergedOptions, notifyOptions);\n    }\n    getOptimisticResult(options) {\n        const defaultedOptions = this.client.defaultQueryObserverOptions(options);\n        const query = this.client\n            .getQueryCache()\n            .build(this.client, defaultedOptions);\n        return this.createResult(query, defaultedOptions);\n    }\n    getCurrentResult() {\n        return this.currentResult;\n    }\n    trackResult(result, defaultedOptions) {\n        const trackedResult = {};\n        const trackProp = (key) => {\n            if (!this.trackedProps.includes(key)) {\n                this.trackedProps.push(key);\n            }\n        };\n        Object.keys(result).forEach(key => {\n            Object.defineProperty(trackedResult, key, {\n                configurable: false,\n                enumerable: true,\n                get: () => {\n                    trackProp(key);\n                    return result[key];\n                },\n            });\n        });\n        if (defaultedOptions.useErrorBoundary || defaultedOptions.suspense) {\n            trackProp('error');\n        }\n        return trackedResult;\n    }\n    getNextResult(options) {\n        return new Promise((resolve, reject) => {\n            const unsubscribe = this.subscribe(result => {\n                if (!result.isFetching) {\n                    unsubscribe();\n                    if (result.isError && (options === null || options === void 0 ? void 0 : options.throwOnError)) {\n                        reject(result.error);\n                    }\n                    else {\n                        resolve(result);\n                    }\n                }\n            });\n        });\n    }\n    getCurrentQuery() {\n        return this.currentQuery;\n    }\n    remove() {\n        this.client.getQueryCache().remove(this.currentQuery);\n    }\n    refetch(options) {\n        return this.fetch(Object.assign(Object.assign({}, options), { meta: { refetchPage: options === null || options === void 0 ? void 0 : options.refetchPage } }));\n    }\n    fetchOptimistic(options) {\n        const defaultedOptions = this.client.defaultQueryObserverOptions(options);\n        const query = this.client\n            .getQueryCache()\n            .build(this.client, defaultedOptions);\n        return query.fetch().then(() => this.createResult(query, defaultedOptions));\n    }\n    fetch(fetchOptions) {\n        return this.executeFetch(fetchOptions).then(() => {\n            this.updateResult();\n            return this.currentResult;\n        });\n    }\n    executeFetch(fetchOptions) {\n        // Make sure we reference the latest query as the current one might have been removed\n        this.updateQuery();\n        // Fetch\n        let promise = this.currentQuery.fetch(this.options, fetchOptions);\n        if (!(fetchOptions === null || fetchOptions === void 0 ? void 0 : fetchOptions.throwOnError)) {\n            promise = promise.catch(noop);\n        }\n        return promise;\n    }\n    updateStaleTimeout() {\n        this.clearStaleTimeout();\n        if (isServer ||\n            this.currentResult.isStale ||\n            !isValidTimeout(this.options.staleTime)) {\n            return;\n        }\n        const time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime);\n        // The timeout is sometimes triggered 1 ms before the stale time expiration.\n        // To mitigate this issue we always add 1 ms to the timeout.\n        const timeout = time + 1;\n        // @ts-ignore\n        this.staleTimeoutId = setTimeout(() => {\n            if (!this.currentResult.isStale) {\n                this.updateResult();\n            }\n        }, timeout);\n    }\n    computeRefetchInterval() {\n        var _a;\n        return typeof this.options.refetchInterval === 'function'\n            ? this.options.refetchInterval(this.currentResult.data, this.currentQuery)\n            : (_a = this.options.refetchInterval) !== null && _a !== void 0 ? _a : false;\n    }\n    updateRefetchInterval(nextInterval) {\n        this.clearRefetchInterval();\n        this.currentRefetchInterval = nextInterval;\n        if (isServer ||\n            this.options.enabled === false ||\n            !isValidTimeout(this.currentRefetchInterval) ||\n            this.currentRefetchInterval === 0) {\n            return;\n        }\n        // @ts-ignore\n        this.refetchIntervalId = setInterval(() => {\n            if (this.options.refetchIntervalInBackground ||\n                focusManager.isFocused()) {\n                this.executeFetch();\n            }\n        }, this.currentRefetchInterval);\n    }\n    updateTimers() {\n        this.updateStaleTimeout();\n        this.updateRefetchInterval(this.computeRefetchInterval());\n    }\n    clearTimers() {\n        this.clearStaleTimeout();\n        this.clearRefetchInterval();\n    }\n    clearStaleTimeout() {\n        clearTimeout(this.staleTimeoutId);\n        this.staleTimeoutId = undefined;\n    }\n    clearRefetchInterval() {\n        clearInterval(this.refetchIntervalId);\n        this.refetchIntervalId = undefined;\n    }\n    createResult(query, options) {\n        var _a;\n        const prevQuery = this.currentQuery;\n        const prevOptions = this.options;\n        const prevResult = this.currentResult;\n        const prevResultState = this.currentResultState;\n        const prevResultOptions = this.currentResultOptions;\n        const queryChange = query !== prevQuery;\n        const queryInitialState = queryChange\n            ? query.state\n            : this.currentQueryInitialState;\n        const prevQueryResult = queryChange\n            ? this.currentResult\n            : this.previousQueryResult;\n        const { state } = query;\n        let { dataUpdatedAt, error, errorUpdatedAt, isFetching, status } = state;\n        let isPreviousData = false;\n        let isPlaceholderData = false;\n        let data;\n        // Optimistically set result in fetching state if needed\n        // @ts-ignore\n        if (options.optimisticResults) {\n            const mounted = this.hasListeners();\n            const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n            const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n            if (fetchOnMount || fetchOptionally) {\n                isFetching = true;\n                if (!dataUpdatedAt) {\n                    status = 'loading';\n                }\n            }\n        }\n        // Keep previous data if needed\n        if (options.keepPreviousData &&\n            !state.dataUpdateCount && (prevQueryResult === null || prevQueryResult === void 0 ? void 0 : prevQueryResult.isSuccess) &&\n            status !== 'error') {\n            data = prevQueryResult.data;\n            dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n            status = prevQueryResult.status;\n            isPreviousData = true;\n        }\n        // Select data if needed\n        else if (options.select && typeof state.data !== 'undefined') {\n            // Memoize select result\n            if (prevResult &&\n                state.data === (prevResultState === null || prevResultState === void 0 ? void 0 : prevResultState.data) &&\n                options.select === ((_a = this.previousSelect) === null || _a === void 0 ? void 0 : _a.fn) &&\n                !this.previousSelectError) {\n                data = this.previousSelect.result;\n            }\n            else {\n                try {\n                    data = options.select(state.data);\n                    if (options.structuralSharing !== false) {\n                        data = replaceEqualDeep(prevResult === null || prevResult === void 0 ? void 0 : prevResult.data, data);\n                    }\n                    this.previousSelect = {\n                        fn: options.select,\n                        result: data,\n                    };\n                    this.previousSelectError = null;\n                }\n                catch (selectError) {\n                    getLogger().error(selectError);\n                    error = selectError;\n                    this.previousSelectError = selectError;\n                    errorUpdatedAt = Date.now();\n                    status = 'error';\n                }\n            }\n        }\n        // Use query data\n        else {\n            data = state.data;\n        }\n        // Show placeholder data if needed\n        if (typeof options.placeholderData !== 'undefined' &&\n            typeof data === 'undefined' &&\n            (status === 'loading' || status === 'idle')) {\n            let placeholderData;\n            // Memoize placeholder data\n            if ((prevResult === null || prevResult === void 0 ? void 0 : prevResult.isPlaceholderData) &&\n                options.placeholderData === (prevResultOptions === null || prevResultOptions === void 0 ? void 0 : prevResultOptions.placeholderData)) {\n                placeholderData = prevResult.data;\n            }\n            else {\n                placeholderData =\n                    typeof options.placeholderData === 'function'\n                        ? options.placeholderData()\n                        : options.placeholderData;\n                if (options.select && typeof placeholderData !== 'undefined') {\n                    try {\n                        placeholderData = options.select(placeholderData);\n                        if (options.structuralSharing !== false) {\n                            placeholderData = replaceEqualDeep(prevResult === null || prevResult === void 0 ? void 0 : prevResult.data, placeholderData);\n                        }\n                        this.previousSelectError = null;\n                    }\n                    catch (selectError) {\n                        getLogger().error(selectError);\n                        error = selectError;\n                        this.previousSelectError = selectError;\n                        errorUpdatedAt = Date.now();\n                        status = 'error';\n                    }\n                }\n            }\n            if (typeof placeholderData !== 'undefined') {\n                status = 'success';\n                data = placeholderData;\n                isPlaceholderData = true;\n            }\n        }\n        const result = {\n            status,\n            isLoading: status === 'loading',\n            isSuccess: status === 'success',\n            isError: status === 'error',\n            isIdle: status === 'idle',\n            data,\n            dataUpdatedAt,\n            error,\n            errorUpdatedAt,\n            failureCount: state.fetchFailureCount,\n            isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n            isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount ||\n                state.errorUpdateCount > queryInitialState.errorUpdateCount,\n            isFetching,\n            isRefetching: isFetching && status !== 'loading',\n            isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n            isPlaceholderData,\n            isPreviousData,\n            isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n            isStale: isStale(query, options),\n            refetch: this.refetch,\n            remove: this.remove,\n        };\n        return result;\n    }\n    shouldNotifyListeners(result, prevResult) {\n        if (!prevResult) {\n            return true;\n        }\n        const { notifyOnChangeProps, notifyOnChangePropsExclusions } = this.options;\n        if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n            return true;\n        }\n        if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n            return true;\n        }\n        const includedProps = notifyOnChangeProps === 'tracked'\n            ? this.trackedProps\n            : notifyOnChangeProps;\n        return Object.keys(result).some(key => {\n            const typedKey = key;\n            const changed = result[typedKey] !== prevResult[typedKey];\n            const isIncluded = includedProps === null || includedProps === void 0 ? void 0 : includedProps.some(x => x === key);\n            const isExcluded = notifyOnChangePropsExclusions === null || notifyOnChangePropsExclusions === void 0 ? void 0 : notifyOnChangePropsExclusions.some(x => x === key);\n            return changed && !isExcluded && (!includedProps || isIncluded);\n        });\n    }\n    updateResult(notifyOptions) {\n        const prevResult = this.currentResult;\n        this.currentResult = this.createResult(this.currentQuery, this.options);\n        this.currentResultState = this.currentQuery.state;\n        this.currentResultOptions = this.options;\n        // Only notify if something has changed\n        if (shallowEqualObjects(this.currentResult, prevResult)) {\n            return;\n        }\n        // Determine which callbacks to trigger\n        const defaultNotifyOptions = { cache: true };\n        if ((notifyOptions === null || notifyOptions === void 0 ? void 0 : notifyOptions.listeners) !== false &&\n            this.shouldNotifyListeners(this.currentResult, prevResult)) {\n            defaultNotifyOptions.listeners = true;\n        }\n        this.notify(Object.assign(Object.assign({}, defaultNotifyOptions), notifyOptions));\n    }\n    updateQuery() {\n        const query = this.client\n            .getQueryCache()\n            .build(this.client, this.options);\n        if (query === this.currentQuery) {\n            return;\n        }\n        const prevQuery = this.currentQuery;\n        this.currentQuery = query;\n        this.currentQueryInitialState = query.state;\n        this.previousQueryResult = this.currentResult;\n        if (this.hasListeners()) {\n            prevQuery === null || prevQuery === void 0 ? void 0 : prevQuery.removeObserver(this);\n            query.addObserver(this);\n        }\n    }\n    onQueryUpdate(action) {\n        const notifyOptions = {};\n        if (action.type === 'success') {\n            notifyOptions.onSuccess = true;\n        }\n        else if (action.type === 'error' && !isCancelledError(action.error)) {\n            notifyOptions.onError = true;\n        }\n        this.updateResult(notifyOptions);\n        if (this.hasListeners()) {\n            this.updateTimers();\n        }\n    }\n    notify(notifyOptions) {\n        notifyManager.batch(() => {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            // First trigger the configuration callbacks\n            if (notifyOptions.onSuccess) {\n                (_b = (_a = this.options).onSuccess) === null || _b === void 0 ? void 0 : _b.call(_a, this.currentResult.data);\n                (_d = (_c = this.options).onSettled) === null || _d === void 0 ? void 0 : _d.call(_c, this.currentResult.data, null);\n            }\n            else if (notifyOptions.onError) {\n                (_f = (_e = this.options).onError) === null || _f === void 0 ? void 0 : _f.call(_e, this.currentResult.error);\n                (_h = (_g = this.options).onSettled) === null || _h === void 0 ? void 0 : _h.call(_g, undefined, this.currentResult.error);\n            }\n            // Then trigger the listeners\n            if (notifyOptions.listeners) {\n                this.listeners.forEach(listener => {\n                    listener(this.currentResult);\n                });\n            }\n            // Then the cache listeners\n            if (notifyOptions.cache) {\n                this.client\n                    .getQueryCache()\n                    .notify({ query: this.currentQuery, type: 'observerResultsUpdated' });\n            }\n        });\n    }\n}\nfunction shouldLoadOnMount(query, options) {\n    return (options.enabled !== false &&\n        !query.state.dataUpdatedAt &&\n        !(query.state.status === 'error' && options.retryOnMount === false));\n}\nfunction shouldRefetchOnMount(query, options) {\n    return (options.enabled !== false &&\n        query.state.dataUpdatedAt > 0 &&\n        (options.refetchOnMount === 'always' ||\n            (options.refetchOnMount !== false && isStale(query, options))));\n}\nfunction shouldFetchOnMount(query, options) {\n    return (shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options));\n}\nfunction shouldFetchOnReconnect(query, options) {\n    return (options.enabled !== false &&\n        (options.refetchOnReconnect === 'always' ||\n            (options.refetchOnReconnect !== false && isStale(query, options))));\n}\nfunction shouldFetchOnWindowFocus(query, options) {\n    return (options.enabled !== false &&\n        (options.refetchOnWindowFocus === 'always' ||\n            (options.refetchOnWindowFocus !== false && isStale(query, options))));\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n    return (options.enabled !== false &&\n        (query !== prevQuery || prevOptions.enabled === false) &&\n        (!options.suspense || query.state.status !== 'error') &&\n        isStale(query, options));\n}\nfunction isStale(query, options) {\n    return query.isStaleByTime(options.staleTime);\n}\n","import { hashQueryKeyByOptions, matchQuery, parseFilterArgs, } from './utils';\nimport { Query } from './query';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable';\nimport './queryObserver';\n// CLASS\nexport class QueryCache extends Subscribable {\n    constructor(config) {\n        super();\n        this.config = config || {};\n        this.queries = [];\n        this.queriesMap = {};\n    }\n    build(client, options, state) {\n        var _a;\n        const queryKey = options.queryKey;\n        const queryHash = (_a = options.queryHash) !== null && _a !== void 0 ? _a : hashQueryKeyByOptions(queryKey, options);\n        let query = this.get(queryHash);\n        if (!query) {\n            query = new Query({\n                cache: this,\n                queryKey,\n                queryHash,\n                options: client.defaultQueryOptions(options),\n                state,\n                defaultOptions: client.getQueryDefaults(queryKey),\n                meta: options.meta,\n            });\n            this.add(query);\n        }\n        return query;\n    }\n    add(query) {\n        if (!this.queriesMap[query.queryHash]) {\n            this.queriesMap[query.queryHash] = query;\n            this.queries.push(query);\n            this.notify({\n                type: 'queryAdded',\n                query,\n            });\n        }\n    }\n    remove(query) {\n        const queryInMap = this.queriesMap[query.queryHash];\n        if (queryInMap) {\n            query.destroy();\n            this.queries = this.queries.filter(x => x !== query);\n            if (queryInMap === query) {\n                delete this.queriesMap[query.queryHash];\n            }\n            this.notify({ type: 'queryRemoved', query });\n        }\n    }\n    clear() {\n        notifyManager.batch(() => {\n            this.queries.forEach(query => {\n                this.remove(query);\n            });\n        });\n    }\n    get(queryHash) {\n        return this.queriesMap[queryHash];\n    }\n    getAll() {\n        return this.queries;\n    }\n    find(arg1, arg2) {\n        const [filters] = parseFilterArgs(arg1, arg2);\n        if (typeof filters.exact === 'undefined') {\n            filters.exact = true;\n        }\n        return this.queries.find(query => matchQuery(filters, query));\n    }\n    findAll(arg1, arg2) {\n        const [filters] = parseFilterArgs(arg1, arg2);\n        return Object.keys(filters).length > 0\n            ? this.queries.filter(query => matchQuery(filters, query))\n            : this.queries;\n    }\n    notify(event) {\n        notifyManager.batch(() => {\n            this.listeners.forEach(listener => {\n                listener(event);\n            });\n        });\n    }\n    onFocus() {\n        notifyManager.batch(() => {\n            this.queries.forEach(query => {\n                query.onFocus();\n            });\n        });\n    }\n    onOnline() {\n        notifyManager.batch(() => {\n            this.queries.forEach(query => {\n                query.onOnline();\n            });\n        });\n    }\n}\n","import { getLogger } from './logger';\nimport { notifyManager } from './notifyManager';\nimport { Retryer } from './retryer';\nimport { noop } from './utils';\n// CLASS\nexport class Mutation {\n    constructor(config) {\n        this.options = Object.assign(Object.assign({}, config.defaultOptions), config.options);\n        this.mutationId = config.mutationId;\n        this.mutationCache = config.mutationCache;\n        this.observers = [];\n        this.state = config.state || getDefaultState();\n        this.meta = config.meta;\n    }\n    setState(state) {\n        this.dispatch({ type: 'setState', state });\n    }\n    addObserver(observer) {\n        if (this.observers.indexOf(observer) === -1) {\n            this.observers.push(observer);\n        }\n    }\n    removeObserver(observer) {\n        this.observers = this.observers.filter(x => x !== observer);\n    }\n    cancel() {\n        if (this.retryer) {\n            this.retryer.cancel();\n            return this.retryer.promise.then(noop).catch(noop);\n        }\n        return Promise.resolve();\n    }\n    continue() {\n        if (this.retryer) {\n            this.retryer.continue();\n            return this.retryer.promise;\n        }\n        return this.execute();\n    }\n    execute() {\n        let data;\n        const restored = this.state.status === 'loading';\n        let promise = Promise.resolve();\n        if (!restored) {\n            this.dispatch({ type: 'loading', variables: this.options.variables });\n            promise = promise\n                .then(() => {\n                var _a, _b;\n                // Notify cache callback\n                (_b = (_a = this.mutationCache.config).onMutate) === null || _b === void 0 ? void 0 : _b.call(_a, this.state.variables, this);\n            })\n                .then(() => { var _a, _b; return (_b = (_a = this.options).onMutate) === null || _b === void 0 ? void 0 : _b.call(_a, this.state.variables); })\n                .then(context => {\n                if (context !== this.state.context) {\n                    this.dispatch({\n                        type: 'loading',\n                        context,\n                        variables: this.state.variables,\n                    });\n                }\n            });\n        }\n        return promise\n            .then(() => this.executeMutation())\n            .then(result => {\n            var _a, _b;\n            data = result;\n            // Notify cache callback\n            (_b = (_a = this.mutationCache.config).onSuccess) === null || _b === void 0 ? void 0 : _b.call(_a, data, this.state.variables, this.state.context, this);\n        })\n            .then(() => { var _a, _b; return (_b = (_a = this.options).onSuccess) === null || _b === void 0 ? void 0 : _b.call(_a, data, this.state.variables, this.state.context); })\n            .then(() => { var _a, _b; return (_b = (_a = this.options).onSettled) === null || _b === void 0 ? void 0 : _b.call(_a, data, null, this.state.variables, this.state.context); })\n            .then(() => {\n            this.dispatch({ type: 'success', data });\n            return data;\n        })\n            .catch(error => {\n            var _a, _b;\n            // Notify cache callback\n            (_b = (_a = this.mutationCache.config).onError) === null || _b === void 0 ? void 0 : _b.call(_a, error, this.state.variables, this.state.context, this);\n            // Log error\n            getLogger().error(error);\n            return Promise.resolve()\n                .then(() => { var _a, _b; return (_b = (_a = this.options).onError) === null || _b === void 0 ? void 0 : _b.call(_a, error, this.state.variables, this.state.context); })\n                .then(() => { var _a, _b; return (_b = (_a = this.options).onSettled) === null || _b === void 0 ? void 0 : _b.call(_a, undefined, error, this.state.variables, this.state.context); })\n                .then(() => {\n                this.dispatch({ type: 'error', error });\n                throw error;\n            });\n        });\n    }\n    executeMutation() {\n        var _a;\n        this.retryer = new Retryer({\n            fn: () => {\n                if (!this.options.mutationFn) {\n                    return Promise.reject('No mutationFn found');\n                }\n                return this.options.mutationFn(this.state.variables);\n            },\n            onFail: () => {\n                this.dispatch({ type: 'failed' });\n            },\n            onPause: () => {\n                this.dispatch({ type: 'pause' });\n            },\n            onContinue: () => {\n                this.dispatch({ type: 'continue' });\n            },\n            retry: (_a = this.options.retry) !== null && _a !== void 0 ? _a : 0,\n            retryDelay: this.options.retryDelay,\n        });\n        return this.retryer.promise;\n    }\n    dispatch(action) {\n        this.state = reducer(this.state, action);\n        notifyManager.batch(() => {\n            this.observers.forEach(observer => {\n                observer.onMutationUpdate(action);\n            });\n            this.mutationCache.notify(this);\n        });\n    }\n}\nexport function getDefaultState() {\n    return {\n        context: undefined,\n        data: undefined,\n        error: null,\n        failureCount: 0,\n        isPaused: false,\n        status: 'idle',\n        variables: undefined,\n    };\n}\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'failed':\n            return Object.assign(Object.assign({}, state), { failureCount: state.failureCount + 1 });\n        case 'pause':\n            return Object.assign(Object.assign({}, state), { isPaused: true });\n        case 'continue':\n            return Object.assign(Object.assign({}, state), { isPaused: false });\n        case 'loading':\n            return Object.assign(Object.assign({}, state), { context: action.context, data: undefined, error: null, isPaused: false, status: 'loading', variables: action.variables });\n        case 'success':\n            return Object.assign(Object.assign({}, state), { data: action.data, error: null, status: 'success', isPaused: false });\n        case 'error':\n            return Object.assign(Object.assign({}, state), { data: undefined, error: action.error, failureCount: state.failureCount + 1, isPaused: false, status: 'error' });\n        case 'setState':\n            return Object.assign(Object.assign({}, state), action.state);\n        default:\n            return state;\n    }\n}\n","import { notifyManager } from './notifyManager';\nimport { Mutation } from './mutation';\nimport { matchMutation, noop } from './utils';\nimport { Subscribable } from './subscribable';\n// CLASS\nexport class MutationCache extends Subscribable {\n    constructor(config) {\n        super();\n        this.config = config || {};\n        this.mutations = [];\n        this.mutationId = 0;\n    }\n    build(client, options, state) {\n        const mutation = new Mutation({\n            mutationCache: this,\n            mutationId: ++this.mutationId,\n            options: client.defaultMutationOptions(options),\n            state,\n            defaultOptions: options.mutationKey\n                ? client.getMutationDefaults(options.mutationKey)\n                : undefined,\n            meta: options.meta,\n        });\n        this.add(mutation);\n        return mutation;\n    }\n    add(mutation) {\n        this.mutations.push(mutation);\n        this.notify(mutation);\n    }\n    remove(mutation) {\n        this.mutations = this.mutations.filter(x => x !== mutation);\n        mutation.cancel();\n        this.notify(mutation);\n    }\n    clear() {\n        notifyManager.batch(() => {\n            this.mutations.forEach(mutation => {\n                this.remove(mutation);\n            });\n        });\n    }\n    getAll() {\n        return this.mutations;\n    }\n    find(filters) {\n        if (typeof filters.exact === 'undefined') {\n            filters.exact = true;\n        }\n        return this.mutations.find(mutation => matchMutation(filters, mutation));\n    }\n    findAll(filters) {\n        return this.mutations.filter(mutation => matchMutation(filters, mutation));\n    }\n    notify(mutation) {\n        notifyManager.batch(() => {\n            this.listeners.forEach(listener => {\n                listener(mutation);\n            });\n        });\n    }\n    onFocus() {\n        this.resumePausedMutations();\n    }\n    onOnline() {\n        this.resumePausedMutations();\n    }\n    resumePausedMutations() {\n        const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n        return notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(noop)), Promise.resolve()));\n    }\n}\n","import { isCancelable } from './retryer';\nimport { getAbortController } from './utils';\nexport function infiniteQueryBehavior() {\n    return {\n        onFetch: context => {\n            context.fetchFn = () => {\n                var _a, _b, _c, _d, _e, _f;\n                const refetchPage = (_b = (_a = context.fetchOptions) === null || _a === void 0 ? void 0 : _a.meta) === null || _b === void 0 ? void 0 : _b.refetchPage;\n                const fetchMore = (_d = (_c = context.fetchOptions) === null || _c === void 0 ? void 0 : _c.meta) === null || _d === void 0 ? void 0 : _d.fetchMore;\n                const pageParam = fetchMore === null || fetchMore === void 0 ? void 0 : fetchMore.pageParam;\n                const isFetchingNextPage = (fetchMore === null || fetchMore === void 0 ? void 0 : fetchMore.direction) === 'forward';\n                const isFetchingPreviousPage = (fetchMore === null || fetchMore === void 0 ? void 0 : fetchMore.direction) === 'backward';\n                const oldPages = ((_e = context.state.data) === null || _e === void 0 ? void 0 : _e.pages) || [];\n                const oldPageParams = ((_f = context.state.data) === null || _f === void 0 ? void 0 : _f.pageParams) || [];\n                const abortController = getAbortController();\n                const abortSignal = abortController === null || abortController === void 0 ? void 0 : abortController.signal;\n                let newPageParams = oldPageParams;\n                let cancelled = false;\n                // Get query function\n                const queryFn = context.options.queryFn || (() => Promise.reject('Missing queryFn'));\n                const buildNewPages = (pages, param, page, previous) => {\n                    newPageParams = previous\n                        ? [param, ...newPageParams]\n                        : [...newPageParams, param];\n                    return previous ? [page, ...pages] : [...pages, page];\n                };\n                // Create function to fetch a page\n                const fetchPage = (pages, manual, param, previous) => {\n                    if (cancelled) {\n                        return Promise.reject('Cancelled');\n                    }\n                    if (typeof param === 'undefined' && !manual && pages.length) {\n                        return Promise.resolve(pages);\n                    }\n                    const queryFnContext = {\n                        queryKey: context.queryKey,\n                        signal: abortSignal,\n                        pageParam: param,\n                        meta: context.meta,\n                    };\n                    const queryFnResult = queryFn(queryFnContext);\n                    const promise = Promise.resolve(queryFnResult).then(page => buildNewPages(pages, param, page, previous));\n                    if (isCancelable(queryFnResult)) {\n                        const promiseAsAny = promise;\n                        promiseAsAny.cancel = queryFnResult.cancel;\n                    }\n                    return promise;\n                };\n                let promise;\n                // Fetch first page?\n                if (!oldPages.length) {\n                    promise = fetchPage([]);\n                }\n                // Fetch next page?\n                else if (isFetchingNextPage) {\n                    const manual = typeof pageParam !== 'undefined';\n                    const param = manual\n                        ? pageParam\n                        : getNextPageParam(context.options, oldPages);\n                    promise = fetchPage(oldPages, manual, param);\n                }\n                // Fetch previous page?\n                else if (isFetchingPreviousPage) {\n                    const manual = typeof pageParam !== 'undefined';\n                    const param = manual\n                        ? pageParam\n                        : getPreviousPageParam(context.options, oldPages);\n                    promise = fetchPage(oldPages, manual, param, true);\n                }\n                // Refetch pages\n                else {\n                    newPageParams = [];\n                    const manual = typeof context.options.getNextPageParam === 'undefined';\n                    const shouldFetchFirstPage = refetchPage && oldPages[0]\n                        ? refetchPage(oldPages[0], 0, oldPages)\n                        : true;\n                    // Fetch first page\n                    promise = shouldFetchFirstPage\n                        ? fetchPage([], manual, oldPageParams[0])\n                        : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0]));\n                    // Fetch remaining pages\n                    for (let i = 1; i < oldPages.length; i++) {\n                        promise = promise.then(pages => {\n                            const shouldFetchNextPage = refetchPage && oldPages[i]\n                                ? refetchPage(oldPages[i], i, oldPages)\n                                : true;\n                            if (shouldFetchNextPage) {\n                                const param = manual\n                                    ? oldPageParams[i]\n                                    : getNextPageParam(context.options, pages);\n                                return fetchPage(pages, manual, param);\n                            }\n                            return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n                        });\n                    }\n                }\n                const finalPromise = promise.then(pages => ({\n                    pages,\n                    pageParams: newPageParams,\n                }));\n                const finalPromiseAsAny = finalPromise;\n                finalPromiseAsAny.cancel = () => {\n                    cancelled = true;\n                    abortController === null || abortController === void 0 ? void 0 : abortController.abort();\n                    if (isCancelable(promise)) {\n                        promise.cancel();\n                    }\n                };\n                return finalPromise;\n            };\n        },\n    };\n}\nexport function getNextPageParam(options, pages) {\n    var _a;\n    return (_a = options.getNextPageParam) === null || _a === void 0 ? void 0 : _a.call(options, pages[pages.length - 1], pages);\n}\nexport function getPreviousPageParam(options, pages) {\n    var _a;\n    return (_a = options.getPreviousPageParam) === null || _a === void 0 ? void 0 : _a.call(options, pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\nexport function hasNextPage(options, pages) {\n    if (options.getNextPageParam && Array.isArray(pages)) {\n        const nextPageParam = getNextPageParam(options, pages);\n        return (typeof nextPageParam !== 'undefined' &&\n            nextPageParam !== null &&\n            nextPageParam !== false);\n    }\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\nexport function hasPreviousPage(options, pages) {\n    if (options.getPreviousPageParam && Array.isArray(pages)) {\n        const previousPageParam = getPreviousPageParam(options, pages);\n        return (typeof previousPageParam !== 'undefined' &&\n            previousPageParam !== null &&\n            previousPageParam !== false);\n    }\n}\n","import { hashQueryKey, noop, parseFilterArgs, parseQueryArgs, partialMatchKey, hashQueryKeyByOptions, } from './utils';\nimport { QueryCache } from './queryCache';\nimport { MutationCache } from './mutationCache';\nimport { focusManager } from './focusManager';\nimport { onlineManager } from './onlineManager';\nimport { notifyManager } from './notifyManager';\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior';\nimport './types';\n// CLASS\nexport class QueryClient {\n    constructor(config = {}) {\n        this.queryCache = config.queryCache || new QueryCache();\n        this.mutationCache = config.mutationCache || new MutationCache();\n        this.defaultOptions = config.defaultOptions || {};\n        this.queryDefaults = [];\n        this.mutationDefaults = [];\n    }\n    mount() {\n        this.unsubscribeFocus = focusManager.subscribe(() => {\n            if (focusManager.isFocused() && onlineManager.isOnline()) {\n                this.mutationCache.onFocus();\n                this.queryCache.onFocus();\n            }\n        });\n        this.unsubscribeOnline = onlineManager.subscribe(() => {\n            if (focusManager.isFocused() && onlineManager.isOnline()) {\n                this.mutationCache.onOnline();\n                this.queryCache.onOnline();\n            }\n        });\n    }\n    unmount() {\n        var _a, _b;\n        (_a = this.unsubscribeFocus) === null || _a === void 0 ? void 0 : _a.call(this);\n        (_b = this.unsubscribeOnline) === null || _b === void 0 ? void 0 : _b.call(this);\n    }\n    isFetching(arg1, arg2) {\n        const [filters] = parseFilterArgs(arg1, arg2);\n        filters.fetching = true;\n        return this.queryCache.findAll(filters).length;\n    }\n    isMutating(filters) {\n        return this.mutationCache.findAll(Object.assign(Object.assign({}, filters), { fetching: true })).length;\n    }\n    getQueryData(queryKey, filters) {\n        var _a;\n        return (_a = this.queryCache.find(queryKey, filters)) === null || _a === void 0 ? void 0 : _a.state.data;\n    }\n    getQueriesData(queryKeyOrFilters) {\n        return this.getQueryCache()\n            .findAll(queryKeyOrFilters)\n            .map(({ queryKey, state }) => {\n            const data = state.data;\n            return [queryKey, data];\n        });\n    }\n    setQueryData(queryKey, updater, options) {\n        const parsedOptions = parseQueryArgs(queryKey);\n        const defaultedOptions = this.defaultQueryOptions(parsedOptions);\n        return this.queryCache\n            .build(this, defaultedOptions)\n            .setData(updater, options);\n    }\n    setQueriesData(queryKeyOrFilters, updater, options) {\n        return notifyManager.batch(() => this.getQueryCache()\n            .findAll(queryKeyOrFilters)\n            .map(({ queryKey }) => [\n            queryKey,\n            this.setQueryData(queryKey, updater, options),\n        ]));\n    }\n    getQueryState(queryKey, filters) {\n        var _a;\n        return (_a = this.queryCache.find(queryKey, filters)) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    removeQueries(arg1, arg2) {\n        const [filters] = parseFilterArgs(arg1, arg2);\n        const queryCache = this.queryCache;\n        notifyManager.batch(() => {\n            queryCache.findAll(filters).forEach(query => {\n                queryCache.remove(query);\n            });\n        });\n    }\n    resetQueries(arg1, arg2, arg3) {\n        const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n        const queryCache = this.queryCache;\n        const refetchFilters = Object.assign(Object.assign({}, filters), { active: true });\n        return notifyManager.batch(() => {\n            queryCache.findAll(filters).forEach(query => {\n                query.reset();\n            });\n            return this.refetchQueries(refetchFilters, options);\n        });\n    }\n    cancelQueries(arg1, arg2, arg3) {\n        const [filters, cancelOptions = {}] = parseFilterArgs(arg1, arg2, arg3);\n        if (typeof cancelOptions.revert === 'undefined') {\n            cancelOptions.revert = true;\n        }\n        const promises = notifyManager.batch(() => this.queryCache.findAll(filters).map(query => query.cancel(cancelOptions)));\n        return Promise.all(promises).then(noop).catch(noop);\n    }\n    invalidateQueries(arg1, arg2, arg3) {\n        var _a, _b, _c;\n        const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n        const refetchFilters = Object.assign(Object.assign({}, filters), { \n            // if filters.refetchActive is not provided and filters.active is explicitly false,\n            // e.g. invalidateQueries({ active: false }), we don't want to refetch active queries\n            active: (_b = (_a = filters.refetchActive) !== null && _a !== void 0 ? _a : filters.active) !== null && _b !== void 0 ? _b : true, inactive: (_c = filters.refetchInactive) !== null && _c !== void 0 ? _c : false });\n        return notifyManager.batch(() => {\n            this.queryCache.findAll(filters).forEach(query => {\n                query.invalidate();\n            });\n            return this.refetchQueries(refetchFilters, options);\n        });\n    }\n    refetchQueries(arg1, arg2, arg3) {\n        const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n        const promises = notifyManager.batch(() => this.queryCache.findAll(filters).map(query => query.fetch(undefined, Object.assign(Object.assign({}, options), { meta: { refetchPage: filters === null || filters === void 0 ? void 0 : filters.refetchPage } }))));\n        let promise = Promise.all(promises).then(noop);\n        if (!(options === null || options === void 0 ? void 0 : options.throwOnError)) {\n            promise = promise.catch(noop);\n        }\n        return promise;\n    }\n    fetchQuery(arg1, arg2, arg3) {\n        const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n        const defaultedOptions = this.defaultQueryOptions(parsedOptions);\n        // https://github.com/tannerlinsley/react-query/issues/652\n        if (typeof defaultedOptions.retry === 'undefined') {\n            defaultedOptions.retry = false;\n        }\n        const query = this.queryCache.build(this, defaultedOptions);\n        return query.isStaleByTime(defaultedOptions.staleTime)\n            ? query.fetch(defaultedOptions)\n            : Promise.resolve(query.state.data);\n    }\n    prefetchQuery(arg1, arg2, arg3) {\n        return this.fetchQuery(arg1, arg2, arg3)\n            .then(noop)\n            .catch(noop);\n    }\n    fetchInfiniteQuery(arg1, arg2, arg3) {\n        const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n        parsedOptions.behavior = infiniteQueryBehavior();\n        return this.fetchQuery(parsedOptions);\n    }\n    prefetchInfiniteQuery(arg1, arg2, arg3) {\n        return this.fetchInfiniteQuery(arg1, arg2, arg3)\n            .then(noop)\n            .catch(noop);\n    }\n    cancelMutations() {\n        const promises = notifyManager.batch(() => this.mutationCache.getAll().map(mutation => mutation.cancel()));\n        return Promise.all(promises).then(noop).catch(noop);\n    }\n    resumePausedMutations() {\n        return this.getMutationCache().resumePausedMutations();\n    }\n    executeMutation(options) {\n        return this.mutationCache.build(this, options).execute();\n    }\n    getQueryCache() {\n        return this.queryCache;\n    }\n    getMutationCache() {\n        return this.mutationCache;\n    }\n    getDefaultOptions() {\n        return this.defaultOptions;\n    }\n    setDefaultOptions(options) {\n        this.defaultOptions = options;\n    }\n    setQueryDefaults(queryKey, options) {\n        const result = this.queryDefaults.find(x => hashQueryKey(queryKey) === hashQueryKey(x.queryKey));\n        if (result) {\n            result.defaultOptions = options;\n        }\n        else {\n            this.queryDefaults.push({ queryKey, defaultOptions: options });\n        }\n    }\n    getQueryDefaults(queryKey) {\n        var _a;\n        return queryKey\n            ? (_a = this.queryDefaults.find(x => partialMatchKey(queryKey, x.queryKey))) === null || _a === void 0 ? void 0 : _a.defaultOptions : undefined;\n    }\n    setMutationDefaults(mutationKey, options) {\n        const result = this.mutationDefaults.find(x => hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey));\n        if (result) {\n            result.defaultOptions = options;\n        }\n        else {\n            this.mutationDefaults.push({ mutationKey, defaultOptions: options });\n        }\n    }\n    getMutationDefaults(mutationKey) {\n        var _a;\n        return mutationKey\n            ? (_a = this.mutationDefaults.find(x => partialMatchKey(mutationKey, x.mutationKey))) === null || _a === void 0 ? void 0 : _a.defaultOptions : undefined;\n    }\n    defaultQueryOptions(options) {\n        if (options === null || options === void 0 ? void 0 : options._defaulted) {\n            return options;\n        }\n        const defaultedOptions = Object.assign(Object.assign(Object.assign(Object.assign({}, this.defaultOptions.queries), this.getQueryDefaults(options === null || options === void 0 ? void 0 : options.queryKey)), options), { _defaulted: true });\n        if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n            defaultedOptions.queryHash = hashQueryKeyByOptions(defaultedOptions.queryKey, defaultedOptions);\n        }\n        return defaultedOptions;\n    }\n    defaultQueryObserverOptions(options) {\n        return this.defaultQueryOptions(options);\n    }\n    defaultMutationOptions(options) {\n        if (options === null || options === void 0 ? void 0 : options._defaulted) {\n            return options;\n        }\n        return Object.assign(Object.assign(Object.assign(Object.assign({}, this.defaultOptions.mutations), this.getMutationDefaults(options === null || options === void 0 ? void 0 : options.mutationKey)), options), { _defaulted: true });\n    }\n    clear() {\n        this.queryCache.clear();\n        this.mutationCache.clear();\n    }\n}\n","<script>import { setContext, onMount, onDestroy } from 'svelte';\nimport { MutationCache, QueryCache, QueryClient } from '../queryCore';\n;\n// Props with default values\nexport let queryCache = new QueryCache();\nexport let mutationCache = new MutationCache();\nexport let defaultOptions = {};\nexport let client = new QueryClient({\n    queryCache,\n    mutationCache,\n    defaultOptions,\n});\nonMount(() => {\n    client.mount();\n});\nsetContext('queryClient', client);\nonDestroy(() => {\n    client.unmount();\n});\n// source\n</script>\n\n<slot />\n","import { getContext } from 'svelte';\nimport '../queryCore/core/queryClient';\nexport default function useQueryClient() {\n    const queryClient = getContext('queryClient');\n    if (!queryClient) {\n        throw new Error('No QueryClient set, use QueryClientProvider to set one');\n    }\n    return queryClient;\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { notifyManager } from \"./queryCore\";\nexport function setBatchCalls(options) {\n    // Make sure results are optimistically set in fetching state before subscribing or updating options\n    options.optimisticResults = true;\n    if (options.onError) {\n        options.onError = notifyManager.batchCalls(options.onError);\n    }\n    if (options.onSuccess) {\n        options.onSuccess = notifyManager.batchCalls(options.onSuccess);\n    }\n    if (options.onSettled) {\n        options.onSettled = notifyManager.batchCalls(options.onSettled);\n    }\n    return options;\n}\n","/* eslint-disable no-shadow */\nimport { readable } from 'svelte/store';\nimport { notifyManager, QueryObserver } from '../queryCore/core';\nimport { parseQueryArgs } from '../queryCore/core/utils';\nimport { useQueryClient } from '../queryClientProvider';\nimport { setBatchCalls } from '../utils';\nexport default function useQuery(arg1, arg2, arg3) {\n    const options = parseQueryArgs(arg1, arg2, arg3);\n    const client = useQueryClient();\n    let defaultedOptions = client.defaultQueryObserverOptions(options);\n    // Include callbacks in batch renders\n    defaultedOptions = setBatchCalls(defaultedOptions);\n    const observer = new QueryObserver(client, defaultedOptions);\n    const { subscribe } = readable(observer.getCurrentResult(), set => {\n        return observer.subscribe(notifyManager.batchCalls(set));\n    });\n    // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n    observer.updateResult();\n    function setOptions(arg1, arg2, arg3) {\n        const options = parseQueryArgs(arg1, arg2, arg3);\n        let defaultedOptions = client.defaultQueryObserverOptions(options);\n        // Include callbacks in batch renders\n        defaultedOptions = setBatchCalls(defaultedOptions);\n        if (observer.hasListeners()) {\n            observer.setOptions(defaultedOptions, { listeners: false });\n        }\n    }\n    function updateOptions(options) {\n        observer.updateOptions(options);\n    }\n    function setEnabled(enabled) {\n        updateOptions({ enabled });\n    }\n    return { subscribe, setOptions, updateOptions, setEnabled };\n}\n","import { writable } from 'svelte/store';\n\nconst { set, subscribe } = writable({});\n\nconst remove = () => {\n  set({});\n};\n\nconst activeRoute = {\n  subscribe,\n  set,\n  remove,\n};\n\nexport { activeRoute };\n","const UrlParser = (urlString, namedUrl = '') => {\n  const urlBase = new URL(urlString);\n\n  /**\n   * Wrapper for URL.hash\n   *\n   **/\n  function hash() {\n    return urlBase.hash;\n  }\n\n  /**\n   * Wrapper for URL.host\n   *\n   **/\n  function host() {\n    return urlBase.host;\n  }\n\n  /**\n   * Wrapper for URL.hostname\n   *\n   **/\n  function hostname() {\n    return urlBase.hostname;\n  }\n\n  /**\n   * Returns an object with all the named params and their values\n   *\n   **/\n  function namedParams() {\n    const allPathName = pathNames();\n    const allNamedParamsKeys = namedParamsWithIndex();\n\n    return allNamedParamsKeys.reduce((values, paramKey) => {\n      values[paramKey.value] = allPathName[paramKey.index];\n      return values;\n    }, {});\n  }\n\n  /**\n   * Returns an array with all the named param keys\n   *\n   **/\n  function namedParamsKeys() {\n    const allNamedParamsKeys = namedParamsWithIndex(namedUrl);\n\n    return allNamedParamsKeys.reduce((values, paramKey) => {\n      values.push(paramKey.value);\n      return values;\n    }, []);\n  }\n\n  /**\n   * Returns an array with all the named param values\n   *\n   **/\n  function namedParamsValues() {\n    const allPathName = pathNames();\n    const allNamedParamsKeys = namedParamsWithIndex();\n\n    return allNamedParamsKeys.reduce((values, paramKey) => {\n      values.push(allPathName[paramKey.index]);\n      return values;\n    }, []);\n  }\n\n  /**\n   * Returns an array with all named param ids and their position in the path\n   * Private\n   **/\n  function namedParamsWithIndex() {\n    const namedUrlParams = getPathNames(namedUrl);\n\n    return namedUrlParams.reduce((validParams, param, index) => {\n      if (param[0] === ':') {\n        validParams.push({ value: param.slice(1), index });\n      }\n      return validParams;\n    }, []);\n  }\n\n  /**\n   * Wrapper for URL.port\n   *\n   **/\n  function port() {\n    return urlBase.port;\n  }\n\n  /**\n   * Wrapper for URL.pathname\n   *\n   **/\n  function pathname() {\n    return urlBase.pathname;\n  }\n\n  /**\n   * Wrapper for URL.protocol\n   *\n   **/\n  function protocol() {\n    return urlBase.protocol;\n  }\n\n  /**\n   * Wrapper for URL.search\n   *\n   **/\n  function search() {\n    return urlBase.search;\n  }\n\n  /**\n   * Returns an object with all query params and their values\n   *\n   **/\n  function queryParams() {\n    const params = {};\n    urlBase.searchParams.forEach((value, key) => {\n      params[key] = value;\n    });\n\n    return params;\n  }\n\n  /**\n   * Returns an array with all the query param keys\n   *\n   **/\n  function queryParamsKeys() {\n    const params = [];\n    urlBase.searchParams.forEach((_value, key) => {\n      params.push(key);\n    });\n\n    return params;\n  }\n\n  /**\n   * Returns an array with all the query param values\n   *\n   **/\n  function queryParamsValues() {\n    const params = [];\n    urlBase.searchParams.forEach((value) => {\n      params.push(value);\n    });\n\n    return params;\n  }\n\n  /**\n   * Returns an array with all the elements of a pathname\n   *\n   **/\n  function pathNames() {\n    return getPathNames(urlBase.pathname);\n  }\n\n  /**\n   * Returns an array with all the parts of a pathname\n   * Private method\n   **/\n  function getPathNames(pathName) {\n    if (pathName === '/' || pathName.trim().length === 0) return [pathName];\n    if (pathName.slice(-1) === '/') {\n      pathName = pathName.slice(0, -1);\n    }\n    if (pathName[0] === '/') {\n      pathName = pathName.slice(1);\n    }\n\n    return pathName.split('/');\n  }\n\n  return Object.freeze({\n    hash: hash(),\n    host: host(),\n    hostname: hostname(),\n    namedParams: namedParams(),\n    namedParamsKeys: namedParamsKeys(),\n    namedParamsValues: namedParamsValues(),\n    pathNames: pathNames(),\n    port: port(),\n    pathname: pathname(),\n    protocol: protocol(),\n    search: search(),\n    queryParams: queryParams(),\n    queryParamsKeys: queryParamsKeys(),\n    queryParamsValues: queryParamsValues(),\n  });\n};\n\nexport { UrlParser };\n","/**\n * Returns true if object has any nested routes empty\n * @param routeObject\n **/\nconst anyEmptyNestedRoutes = (routeObject) => {\n  let result = false;\n  if (Object.keys(routeObject).length === 0) {\n    return true;\n  }\n\n  if (routeObject.childRoute && Object.keys(routeObject.childRoute).length === 0) {\n    result = true;\n  } else if (routeObject.childRoute) {\n    result = anyEmptyNestedRoutes(routeObject.childRoute);\n  }\n\n  return result;\n};\n\n/**\n * Compare two routes ignoring named params\n * @param pathName string\n * @param routeName string\n **/\n\nconst compareRoutes = (pathName, routeName) => {\n  routeName = removeSlash(routeName);\n\n  if (routeName.includes(':')) {\n    return routeName.includes(pathName);\n  } else {\n    return routeName.startsWith(pathName);\n  }\n};\n\n/**\n * Returns a boolean indicating if the name of path exists in the route based on the language parameter\n * @param pathName string\n * @param route object\n * @param language string\n **/\n\nconst findLocalisedRoute = (pathName, route, language) => {\n  let exists = false;\n\n  if (language) {\n    return { exists: route.lang && route.lang[language] && route.lang[language].includes(pathName), language };\n  }\n\n  exists = compareRoutes(pathName, route.name);\n\n  if (!exists && route.lang && typeof route.lang === 'object') {\n    for (const [key, value] of Object.entries(route.lang)) {\n      if (compareRoutes(pathName, value)) {\n        exists = true;\n        language = key;\n      }\n    }\n  }\n\n  return { exists, language };\n};\n\n/**\n * Return all the consecutive named param (placeholders) of a pathname\n * @param pathname\n **/\nconst getNamedParams = (pathName = '') => {\n  if (pathName.trim().length === 0) return [];\n  const namedUrlParams = getPathNames(pathName);\n  return namedUrlParams.reduce((validParams, param) => {\n    if (param[0] === ':') {\n      validParams.push(param.slice(1));\n    }\n\n    return validParams;\n  }, []);\n};\n\n/**\n * Split a pathname based on /\n * @param pathName\n * Private method\n **/\nconst getPathNames = (pathName) => {\n  if (pathName === '/' || pathName.trim().length === 0) return [pathName];\n\n  pathName = removeSlash(pathName, 'both');\n\n  return pathName.split('/');\n};\n\n/**\n * Return the first part of a pathname until the first named param is found\n * @param name\n **/\nconst nameToPath = (name = '') => {\n  let routeName;\n  if (name === '/' || name.trim().length === 0) return name;\n  name = removeSlash(name, 'lead');\n  routeName = name.split(':')[0];\n  routeName = removeSlash(routeName, 'trail');\n\n  return routeName.toLowerCase();\n};\n\n/**\n * Return the path name excluding query params\n * @param name\n **/\nconst pathWithoutQueryParams = (currentRoute) => {\n  const path = currentRoute.path.split('?');\n  return path[0];\n};\n\n/**\n * Return the path name including query params\n * @param name\n **/\nconst pathWithQueryParams = (currentRoute) => {\n  let queryParams = [];\n  if (currentRoute.queryParams) {\n    for (let [key, value] of Object.entries(currentRoute.queryParams)) {\n      queryParams.push(`${key}=${value}`);\n    }\n  }\n\n  const hash = currentRoute.hash ? currentRoute.hash : '';\n\n  if (queryParams.length > 0) {\n    return `${currentRoute.path}?${queryParams.join('&')}${hash}`;\n  } else {\n    return currentRoute.path + hash;\n  }\n};\n\n/**\n * Returns a string with trailing or leading slash character removed\n * @param pathName string\n * @param position string - lead, trail, both\n **/\nconst removeExtraPaths = (pathNames, basePathNames) => {\n  const names = basePathNames.split('/');\n  if (names.length > 1) {\n    names.forEach(function (name, index) {\n      if (name.length > 0 && index > 0) {\n        pathNames.shift();\n      }\n    });\n  }\n\n  return pathNames;\n};\n\n/**\n * Returns a string with trailing or leading slash character removed\n * @param pathName string\n * @param position string - lead, trail, both\n **/\n\nconst removeSlash = (pathName, position = 'lead') => {\n  if (position === 'trail' || position === 'both') {\n    pathName = pathName.replace(/\\/$/, '');\n  }\n\n  if (position === 'lead' || position === 'both') {\n    pathName = pathName.replace(/^\\//, '');\n  }\n\n  return pathName;\n};\n\n/**\n * Returns the name of the route based on the language parameter\n * @param route object\n * @param language string\n **/\n\nconst routeNameLocalised = (route, language = null) => {\n  if (!language || !route.lang || !route.lang[language]) {\n    return route.name;\n  } else {\n    return route.lang[language];\n  }\n};\n\n/**\n * Return the path name excluding query params\n * @param name\n **/\nconst startsWithNamedParam = (currentRoute) => {\n  const routeName = removeSlash(currentRoute);\n\n  return routeName.startsWith(':');\n};\n\n/**\n * Updates the base route path.\n * Route objects can have nested routes (childRoutes) or just a long name like \"admin/employees/show/:id\"\n *\n * @param basePath string\n * @param pathNames array\n * @param route object\n * @param language string\n **/\n\nconst updateRoutePath = (basePath, pathNames, route, language, convert = false) => {\n  if (basePath === '/' || basePath.trim().length === 0) return { result: basePath, language: null };\n\n  let basePathResult = basePath;\n  let routeName = route.name;\n  let currentLanguage = language;\n\n  if (convert) {\n    currentLanguage = '';\n  }\n\n  routeName = removeSlash(routeName);\n  basePathResult = removeSlash(basePathResult);\n\n  if (!route.childRoute) {\n    let localisedRoute = findLocalisedRoute(basePathResult, route, currentLanguage);\n\n    if (localisedRoute.exists && convert) {\n      basePathResult = routeNameLocalised(route, language);\n    }\n\n    let routeNames = routeName.split(':')[0];\n    routeNames = removeSlash(routeNames, 'trail');\n    routeNames = routeNames.split('/');\n    routeNames.shift();\n    routeNames.forEach(() => {\n      const currentPathName = pathNames[0];\n      localisedRoute = findLocalisedRoute(`${basePathResult}/${currentPathName}`, route, currentLanguage);\n\n      if (currentPathName && localisedRoute.exists) {\n        if (convert) {\n          basePathResult = routeNameLocalised(route, language);\n        } else {\n          basePathResult = `${basePathResult}/${currentPathName}`;\n        }\n        pathNames.shift();\n      } else {\n        return { result: basePathResult, language: localisedRoute.language };\n      }\n    });\n    return { result: basePathResult, language: localisedRoute.language };\n  } else {\n    return { result: basePath, language: currentLanguage };\n  }\n};\n\nexport {\n  anyEmptyNestedRoutes,\n  compareRoutes,\n  findLocalisedRoute,\n  getNamedParams,\n  getPathNames,\n  nameToPath,\n  pathWithQueryParams,\n  pathWithoutQueryParams,\n  removeExtraPaths,\n  removeSlash,\n  routeNameLocalised,\n  startsWithNamedParam,\n  updateRoutePath,\n};\n","import { UrlParser } from './url_parser';\n\nimport { pathWithQueryParams, removeSlash } from '../lib/utils';\n\nconst RouterCurrent = (trackPage) => {\n  const trackPageview = trackPage || false;\n  let activeRoute = '';\n\n  const setActive = (newRoute, updateBrowserHistory) => {\n    activeRoute = newRoute.path;\n    pushActiveRoute(newRoute, updateBrowserHistory);\n  };\n\n  const active = () => {\n    return activeRoute;\n  };\n\n  /**\n   * Returns true if pathName is current active route\n   * @param pathName String The path name to check against the current route.\n   * @param includePath Boolean if true checks that pathName is included in current route. If false should match it.\n   **/\n  const isActive = (queryPath, includePath = false) => {\n    if (queryPath[0] !== '/') {\n      queryPath = '/' + queryPath;\n    }\n\n    // remove query params for comparison\n    let pathName = UrlParser(`http://fake.com${queryPath}`).pathname;\n    let activeRoutePath = UrlParser(`http://fake.com${activeRoute}`).pathname;\n\n    pathName = removeSlash(pathName, 'trail');\n\n    activeRoutePath = removeSlash(activeRoutePath, 'trail');\n\n    if (includePath) {\n      return activeRoutePath.includes(pathName);\n    } else {\n      return activeRoutePath === pathName;\n    }\n  };\n\n  const pushActiveRoute = (newRoute, updateBrowserHistory) => {\n    if (typeof window !== 'undefined') {\n      const pathAndSearch = pathWithQueryParams(newRoute);\n\n      if (updateBrowserHistory) {\n        window.history.pushState({ page: pathAndSearch }, '', pathAndSearch);\n      }\n      // Moving back in history does not update browser history but does update tracking.\n      if (trackPageview) {\n        gaTracking(pathAndSearch);\n      }\n    }\n  };\n\n  const gaTracking = (newPage) => {\n    if (typeof ga !== 'undefined') {\n      ga('set', 'page', newPage);\n      ga('send', 'pageview');\n    }\n  };\n\n  return Object.freeze({ active, isActive, setActive });\n};\n\nexport { RouterCurrent };\n","import { RouterGuard } from './guard';\n\nconst RouterRedirect = (route, currentPath) => {\n  const guard = RouterGuard(route.onlyIf);\n\n  const path = () => {\n    let redirectTo = currentPath;\n    if (route.redirectTo && route.redirectTo.length > 0) {\n      redirectTo = route.redirectTo;\n    }\n\n    if (guard.valid() && guard.redirect()) {\n      redirectTo = guard.redirectPath();\n    }\n\n    return redirectTo;\n  };\n\n  return Object.freeze({ path });\n};\n\nexport { RouterRedirect };\n","export const RouterGuard = (onlyIf) => {\n  const guardInfo = onlyIf;\n\n  const valid = () => {\n    return guardInfo && guardInfo.guard && typeof guardInfo.guard === 'function';\n  };\n\n  const redirect = () => {\n    return !guardInfo.guard();\n  };\n\n  const redirectPath = () => {\n    let destinationUrl = '/';\n    if (guardInfo.redirect && guardInfo.redirect.length > 0) {\n      destinationUrl = guardInfo.redirect;\n    }\n\n    return destinationUrl;\n  };\n\n  return Object.freeze({ valid, redirect, redirectPath });\n};\n","import {\n  getNamedParams,\n  nameToPath,\n  updateRoutePath,\n  removeExtraPaths,\n  routeNameLocalised\n} from '../lib/utils';\n\nfunction RouterPath({ basePath, basePathName, pathNames, convert, currentLanguage }) {\n  let updatedPathRoute;\n  let route;\n  let routePathLanguage = currentLanguage;\n\n  function updatedPath(currentRoute) {\n    route = currentRoute;\n    updatedPathRoute = updateRoutePath(basePathName, pathNames, route, routePathLanguage, convert);\n    routePathLanguage = convert ? currentLanguage : updatedPathRoute.language;\n\n    return updatedPathRoute;\n  }\n\n  function localisedPathName() {\n    return routeNameLocalised(route, routePathLanguage);\n  }\n\n  function localisedRouteWithoutNamedParams() {\n    return nameToPath(localisedPathName());\n  }\n\n  function basePathNameWithoutNamedParams() {\n    return nameToPath(updatedPathRoute.result);\n  }\n\n  function namedPath() {\n    let localisedPath = localisedPathName();\n    if (localisedPath && !localisedPath.startsWith('/')) {\n      localisedPath = '/' + localisedPath;\n    }\n\n    return basePath ? `${basePath}${localisedPath}` : localisedPath;\n  }\n\n  function routePath() {\n    let routePathValue = `${basePath}/${basePathNameWithoutNamedParams()}`;\n    if (routePathValue === '//') {\n      routePathValue = '/';\n    }\n\n    if (routePathLanguage) {\n      pathNames = removeExtraPaths(pathNames, localisedRouteWithoutNamedParams());\n    }\n\n    const namedParams = getNamedParams(localisedPathName());\n    if (namedParams && namedParams.length > 0) {\n      namedParams.forEach(function () {\n        if (pathNames.length > 0) {\n          routePathValue += `/${pathNames.shift()}`;\n        }\n      });\n    }\n\n    return routePathValue;\n  }\n\n  function routeLanguage() {\n    return routePathLanguage;\n  }\n\n  function basePathSameAsLocalised() {\n    return basePathNameWithoutNamedParams() === localisedRouteWithoutNamedParams();\n  }\n\n  return Object.freeze({\n    basePathSameAsLocalised,\n    updatedPath,\n    basePathNameWithoutNamedParams,\n    localisedPathName,\n    localisedRouteWithoutNamedParams,\n    namedPath,\n    pathNames,\n    routeLanguage,\n    routePath,\n  });\n}\n\nexport { RouterPath };\n","import { UrlParser } from './url_parser';\nimport { RouterRedirect } from './redirect';\nimport { RouterRoute } from './route';\nimport { RouterPath } from './path';\nimport { anyEmptyNestedRoutes, pathWithoutQueryParams, startsWithNamedParam } from '../lib/utils';\n\nconst NotFoundPage = '/404.html';\n\nfunction RouterFinder({ routes, currentUrl, routerOptions, convert }) {\n  const defaultLanguage = routerOptions.defaultLanguage;\n  const sitePrefix = routerOptions.prefix ? routerOptions.prefix.toLowerCase() : '';\n  const urlParser = parseCurrentUrl(currentUrl, sitePrefix);\n  let redirectTo = '';\n  let routeNamedParams = {};\n  let staticParamMatch = false;\n\n  function findActiveRoute() {\n    let searchActiveRoute = searchActiveRoutes(routes, '', urlParser.pathNames, routerOptions.lang, convert);\n\n    if (!searchActiveRoute || !Object.keys(searchActiveRoute).length || anyEmptyNestedRoutes(searchActiveRoute)) {\n      if (typeof window !== 'undefined') {\n        searchActiveRoute = routeNotFound(routerOptions.lang);\n      }\n    } else {\n      searchActiveRoute.path = pathWithoutQueryParams(searchActiveRoute);\n      if (sitePrefix) {\n        searchActiveRoute.path = `/${sitePrefix}${searchActiveRoute.path}`;\n      }\n    }\n\n    return searchActiveRoute;\n  }\n\n  /**\n   * Gets an array of routes and the browser pathname and return the active route\n   * @param routes\n   * @param basePath\n   * @param pathNames\n   **/\n  function searchActiveRoutes(routes, basePath, pathNames, currentLanguage, convert) {\n    let currentRoute = {};\n    let basePathName = pathNames.shift().toLowerCase();\n    const routerPath = RouterPath({ basePath, basePathName, pathNames, convert, currentLanguage });\n    staticParamMatch = false;\n\n    routes.forEach(function (route) {\n      routerPath.updatedPath(route);\n\n      if (matchRoute(routerPath, route.name)) {\n        let routePath = routerPath.routePath();\n        redirectTo = RouterRedirect(route, redirectTo).path();\n\n        if (currentRoute.name !== routePath) {\n          currentRoute = setCurrentRoute({\n            route,\n            routePath,\n            routeLanguage: routerPath.routeLanguage(),\n            urlParser,\n            namedPath: routerPath.namedPath(),\n          });\n        }\n\n        if (route.nestedRoutes && route.nestedRoutes.length > 0 && routerPath.pathNames.length > 0) {\n          currentRoute.childRoute = searchActiveRoutes(\n            route.nestedRoutes,\n            routePath,\n            routerPath.pathNames,\n            routerPath.routeLanguage(),\n            convert\n          );\n          currentRoute.path = currentRoute.childRoute.path;\n          currentRoute.language = currentRoute.childRoute.language;\n        } else if (nestedRoutesAndNoPath(route, routerPath.pathNames)) {\n          const indexRoute = searchActiveRoutes(\n            route.nestedRoutes,\n            routePath,\n            ['index'],\n            routerPath.routeLanguage(),\n            convert\n          );\n          if (indexRoute && Object.keys(indexRoute).length > 0) {\n            currentRoute.childRoute = indexRoute;\n            currentRoute.language = currentRoute.childRoute.language;\n          }\n        }\n      }\n    });\n\n    if (redirectTo) {\n      currentRoute.redirectTo = redirectTo;\n    }\n\n    return currentRoute;\n  }\n\n  function matchRoute(routerPath, routeName) {\n    const basePathSameAsLocalised = routerPath.basePathSameAsLocalised();\n    if (basePathSameAsLocalised) {\n      staticParamMatch = true;\n    }\n\n    return basePathSameAsLocalised || (!staticParamMatch && startsWithNamedParam(routeName));\n  }\n\n  function nestedRoutesAndNoPath(route, pathNames) {\n    return route.nestedRoutes && route.nestedRoutes.length > 0 && pathNames.length === 0;\n  }\n\n  function parseCurrentUrl(currentUrl, sitePrefix) {\n    if (sitePrefix && sitePrefix.trim().length > 0) {\n      const replacePattern = currentUrl.endsWith(sitePrefix) ? sitePrefix : sitePrefix + \"/\";\n      const noPrefixUrl = currentUrl.replace(replacePattern, '');\n      return UrlParser(noPrefixUrl);\n    } else {\n      return UrlParser(currentUrl);\n    }\n  }\n\n  function setCurrentRoute({ route, routePath, routeLanguage, urlParser, namedPath }) {\n    const routerRoute = RouterRoute({\n      routeInfo: route,\n      urlParser,\n      path: routePath,\n      routeNamedParams,\n      namedPath,\n      language: routeLanguage || defaultLanguage,\n    });\n    routeNamedParams = routerRoute.namedParams();\n\n    return routerRoute.get();\n  }\n\n  const routeNotFound = (customLanguage) => {\n    const custom404Page = routes.find((route) => route.name == '404');\n    const language = customLanguage || defaultLanguage || '';\n    if (custom404Page) {\n      return { ...custom404Page, language, path: '404' };\n    } else {\n      return { name: '404', component: '', path: '404', redirectTo: NotFoundPage };\n    }\n  };\n\n  return Object.freeze({ findActiveRoute });\n}\n\nexport { RouterFinder };\n","import { UrlParser } from './url_parser';\n\nfunction RouterRoute({ routeInfo, path, routeNamedParams, urlParser, namedPath, language }) {\n  const namedParams = () => {\n    const parsedParams = UrlParser(`https://fake.com${urlParser.pathname}`, namedPath).namedParams;\n\n    return { ...routeNamedParams, ...parsedParams };\n  };\n\n  const get = () => {\n    return {\n      name: path,\n      component: routeInfo.component,\n      hash: urlParser.hash,\n      layout: routeInfo.layout,\n      queryParams: urlParser.queryParams,\n      namedParams: namedParams(),\n      path,\n      language,\n    };\n  };\n\n  return Object.freeze({ get, namedParams });\n}\n\nexport { RouterRoute };\n","import { activeRoute } from './store';\nimport { RouterCurrent } from './router/current';\nimport { RouterFinder } from './router/finder';\nimport { removeSlash } from './lib/utils';\n\nconst NotFoundPage = '/404.html';\n\nlet userDefinedRoutes = [];\nlet routerOptions = {};\nlet routerCurrent;\n\n/**\n * Object exposes one single property: activeRoute\n * @param routes  Array of routes\n * @param currentUrl current url\n * @param options configuration options\n **/\nconst SpaRouter = (routes, currentUrl, options = {}) => {\n  routerOptions = { ...options };\n  if (typeof currentUrl === 'undefined' || currentUrl === '') {\n    currentUrl = document.location.href;\n  }\n\n  routerCurrent = RouterCurrent(routerOptions.gaPageviews);\n\n  currentUrl = removeSlash(currentUrl, 'trail');\n  userDefinedRoutes = routes;\n\n  const findActiveRoute = () => {\n    let convert = false;\n\n    if (routerOptions.langConvertTo) {\n      routerOptions.lang = routerOptions.langConvertTo;\n      convert = true;\n    }\n\n    return RouterFinder({ routes, currentUrl, routerOptions, convert }).findActiveRoute();\n  };\n\n  /**\n   * Redirect current route to another\n   * @param destinationUrl\n   **/\n  const navigateNow = (destinationUrl, updateBrowserHistory) => {\n    if (typeof window !== 'undefined') {\n      if (destinationUrl === NotFoundPage) {\n        routerCurrent.setActive({ path: NotFoundPage }, updateBrowserHistory);\n      } else {\n        navigateTo(destinationUrl);\n      }\n    }\n\n    return destinationUrl;\n  };\n\n  const setActiveRoute = (updateBrowserHistory = true) => {\n    const currentRoute = findActiveRoute();\n    if (currentRoute.redirectTo) {\n      return navigateNow(currentRoute.redirectTo, updateBrowserHistory);\n    }\n\n    routerCurrent.setActive(currentRoute, updateBrowserHistory);\n    activeRoute.set(currentRoute);\n\n    return currentRoute;\n  };\n\n  return Object.freeze({\n    setActiveRoute,\n    findActiveRoute,\n  });\n};\n\n/**\n * Converts a route to its localised version\n * @param pathName\n **/\nconst localisedRoute = (pathName, language) => {\n  pathName = removeSlash(pathName, 'lead');\n  routerOptions.langConvertTo = language;\n\n  return SpaRouter(userDefinedRoutes, 'http://fake.com/' + pathName, routerOptions).findActiveRoute();\n};\n\n/**\n * Updates the current active route and updates the browser pathname\n * @param pathName String\n * @param language String\n * @param updateBrowserHistory Boolean\n **/\nconst navigateTo = (pathName, language = null, updateBrowserHistory = true) => {\n  pathName = removeSlash(pathName, 'lead');\n\n  if (language) {\n    routerOptions.langConvertTo = language;\n  }\n\n  return SpaRouter(userDefinedRoutes, 'http://fake.com/' + pathName, routerOptions).setActiveRoute(\n    updateBrowserHistory\n  );\n};\n\n/**\n * Returns true if pathName is current active route\n * @param pathName String The path name to check against the current route.\n * @param includePath Boolean if true checks that pathName is included in current route. If false should match it.\n **/\nconst routeIsActive = (queryPath, includePath = false) => {\n  return routerCurrent.isActive(queryPath, includePath);\n};\n\nif (typeof window !== 'undefined') {\n  // Avoid full page reload on local routes\n  window.addEventListener('click', (event) => {\n    if (event.target.localName.toLowerCase() !== 'a') return;\n    if (event.metaKey || event.ctrlKey || event.shiftKey) return;\n\n    const sitePrefix = routerOptions.prefix ? `/${routerOptions.prefix.toLowerCase()}` : '';\n    const targetHostNameInternal = event.target.pathname && event.target.host === window.location.host;\n    const prefixMatchPath = sitePrefix.length > 1 ? event.target.pathname.startsWith(sitePrefix) : true;\n\n    if (targetHostNameInternal && prefixMatchPath) {\n      event.preventDefault();\n      let navigatePathname = event.target.pathname + event.target.search;\n\n      const destinationUrl = navigatePathname + event.target.search + event.target.hash;\n      if (event.target.target === '_blank') {\n        window.open(destinationUrl, 'newTab');\n      } else {\n        navigateTo(destinationUrl);\n      }\n    }\n  });\n\n  window.onpopstate = function (_event) {\n    let navigatePathname = window.location.pathname + window.location.search + window.location.hash;\n\n    navigateTo(navigatePathname, null, false);\n  };\n}\n\nexport { SpaRouter, localisedRoute, navigateTo, routeIsActive };\n","<script>\n  export let currentRoute = {};\n  export let params = {};\n</script>\n\n{#if currentRoute.layout}\n  <svelte:component this={currentRoute.layout} currentRoute={{ ...currentRoute, layout: '' }} {params} />\n{:else if currentRoute.component}\n  <svelte:component this={currentRoute.component} currentRoute={{ ...currentRoute, component: '' }} {params} />\n{:else if currentRoute.childRoute}\n  <svelte:self currentRoute={currentRoute.childRoute} {params} />\n{/if}\n","<script>\n  import { onMount } from 'svelte';\n\n  import { SpaRouter } from '../spa_router';\n  import Route from './route.svelte';\n  import { activeRoute } from '../store';\n\n  export let routes = [];\n  export let options = {};\n\n  onMount(() => {\n    SpaRouter(routes, document.location.href, options).setActiveRoute();\n  });\n</script>\n\n<Route currentRoute={$activeRoute} />\n","<script lang=\"ts\">\n  export let user: string = new Date().toLocaleString(\"en-us\", {\n    weekday: \"long\",\n  });\n</script>\n\n<div\n  class=\"flex-grow mx-auto flex items-center justify-center flex-column h-96\"\n>\n  <h1 class=\"font-sans tracking-tight font-bold text-xl\">\n    Welcome, {user}\n  </h1>\n</div>\n","<script lang=\"ts\">\n  import type { NotFoundLink } from \"./NotFound.svelte\";\n  export let link: NotFoundLink = {\n    label: \"Home\",\n    url: \"/\",\n  };\n</script>\n\n<div\n  class=\"h-screen w-screen mx-auto flex flex-grow items-center justify-center flex-column\"\n>\n  <h1 class=\"font-sans tracking-tight font-bold text-xl mb-10\">404</h1>\n  <h2 class=\"font-sans tracking-tight font-bold text-lg\">\n    Hello there, The page you're looking for is nonexistent. Here is the link to\n    <a href={link.url}>{link.label}</a>\n  </h2>\n</div>\n","<div class=\"p-4 md:w-1/2 lg:w-1/3\">\n  <div class=\"h-full border-2 border-gray-200 rounded-lg overflow-hidden\">\n    <div\n      class=\"lg:h-48 md:h-36 w-full object-cover object-center flex align-center justify-center bg-gray-100\"\n    />\n    <div class=\"p-6\">\n      <div class=\"bg-gray-400 animate-pulse h-4 w-1/4 mb-2\"></div>\n      <div class=\"w-1/2 mb-4 h-6 animate-pulse bg-gray-500\"></div>\n      <div class=\"leading-relaxed mb-3 w-full h-3 animate-pulse bg-gray-400\"></div>\n      <div class=\"leading-relaxed mb-3 w-2/3 h-3 animate-pulse bg-gray-400\"></div>\n      <div class=\"leading-relaxed mb-3 w-1/2 h-3 animate-pulse bg-gray-400\"></div>\n      <div class=\"flex items-center flex-wrap \">\n        <span\n          class=\"bg-indigo-300 h-4 animate-pulse mt-2 w-32 inline-flex items-center md:mb-2 lg:mb-0\"\n        ></span>\n        <span\n          class=\"bg-indigo-300 w-16 mt-2 h-4 animate-pulse mr-3 px-2 inline-flex items-center ml-auto leading-none text-sm pr-5 py-1\"\n        ></span>\n      </div>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import type { Article } from \"./Card.svelte\";\n\n  export let article: Article;\n</script>\n\n<li class=\"p-4 w-full md:w-1/2 lg:w-1/3\">\n  <article class=\"h-full border-2 border-gray-200 rounded-lg overflow-hidden\">\n    <div\n      class=\"w-full h-48 h-36 object-cover object-center flex align-center justify-center bg-gray-100\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"m-auto block\"\n        ><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" /><circle\n          cx=\"8.5\"\n          cy=\"8.5\"\n          r=\"1.5\"\n        /><polyline points=\"21 15 16 10 5 21\" /></svg\n      >\n    </div>\n    <div class=\"p-6\">\n      {#each article.labels as label}\n        <span\n          class=\"tracking-widest text-xs title-font font-medium text-gray-500 mb-1 mr-2\"\n        >\n          {label}\n        </span>\n      {/each}\n      <h2 class=\"title-font text-lg font-medium text-gray-900 mb-3\">\n        {article.title}\n      </h2>\n      <p class=\"leading-relaxed mb-3 h-full md:h-35 lg:h-40 overflow-hidden\">\n        {@html article.content}\n      </p>\n      <div class=\"flex items-center flex-wrap \">\n        <a\n          class=\"text-indigo-500 inline-flex items-center md:mb-2 lg:mb-0\"\n          href={article.url}\n          >Read More\n          <svg\n            class=\"w-4 h-4 ml-2\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          >\n            <path d=\"M5 12h14\" />\n            <path d=\"M12 5l7 7-7 7\" />\n          </svg>\n        </a>\n        <span\n          class=\"text-gray-600 mr-3 inline-flex items-center lg:ml-auto md:ml-0 ml-auto leading-none text-sm pr-3 py-1 border-r-2 border-gray-300\"\n        >\n          <svg\n            class=\"w-4 h-4 mr-1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            ><circle cx=\"12\" cy=\"12\" r=\"10\" /><polyline\n              points=\"12 6 12 12 16 14\"\n            /></svg\n          >{new Date(article.published).toDateString()}\n        </span>\n        <span\n          class=\"text-gray-600 inline-flex items-center leading-none text-sm\"\n        >\n          <svg\n            class=\"w-4 h-4 mr-1\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\"\n            />\n          </svg>{article.replies.totalItems}\n        </span>\n      </div>\n    </div>\n  </article>\n</li>\n","<script type=\"ts\">\n  import { useQuery } from \"@sveltestack/svelte-query\";\n  import { getPost } from \"../../api/blog\";\n  import CardPlaceholder from \"../Placeholder/CardPlaceholder.svelte\";\n  import Card from \"../Card/Card.svelte\";\n  import type ArticleList from \"./Blog.svelte\";\n\n  const queryResult = useQuery<unknown, Error, ArticleList>(\"posts\", () =>\n    getPost({ key: process.env.BLOGGER_KEY })\n  );\n</script>\n\n<div id=\"blog-wrapper\" class=\"container\">\n  {#if $queryResult.isLoading}\n    <CardPlaceholder />\n  {:else if $queryResult.error}\n    <span>An error has occurred: {$queryResult.error.message}</span>\n  {:else}\n    <ul class=\"flex flex-wrap\">\n      {#each $queryResult.data.items as article}\n        <Card {article} />\n      {/each}\n    </ul>\n  {/if}\n</div>\n","import type { ArticleList } from \"../components/Blog/Blog.svelte\";\n\nconst baseURI =\n  \"https://www.googleapis.com/blogger/v3/blogs/3668625331368011796/\";\n\n/**\n * @param params\n */\nexport async function getPost(\n  params: Record<string, string> | URLSearchParams\n): Promise<unknown | ArticleList | Error> {\n  const response = await fetch(\n    baseURI + \"posts?\" + new URLSearchParams({ ...params }).toString()\n  );\n  if (response.ok) {\n    const data: unknown | ArticleList = await response.json();\n    return Promise.resolve(data);\n  } else {\n    return Promise.reject(new Error(\"no post found\"));\n  }\n}\n","<script lang=\"ts\">\n  export let name: string;\n  let buttonClose = false;\n\n  /**\n   *\n   */\n  function handleClick() {\n    buttonClose = !buttonClose;\n  }\n</script>\n\n<header class=\"navbar bg-white sticky\">\n  <div class=\"container relative mx-auto\">\n    <div class=\"row items-center\">\n      <div class=\"w-full\">\n        <nav\n          class=\"flex items-center justify-between py-4\"\n          class:active={buttonClose}\n        >\n          <a class=\"navbar-brand mr-5\" href=\"/\">\n            <img src=\"logo.png\" alt={name} class=\"h-10 w-10\" />\n          </a>\n          <button\n            class=\"block navbar-toggler focus:outline-none lg:hidden\"\n            type=\"button\"\n            aria-controls=\"navbarOne\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n            on:click={handleClick}\n          >\n            <span class=\"toggler-icon\" />\n            <span class=\"toggler-icon\" />\n            <span class=\"toggler-icon\" />\n          </button>\n          <div\n            class=\"absolute left-0 z-20 hidden w-full px-5 py-3 duration-300 bg-white lg:w-auto lg:block top-full mt-full lg:static lg:bg-transparent shadow lg:shadow-none\"\n            class:hidden={!buttonClose}\n            class:ml-7={buttonClose}\n          >\n            <ul\n              id=\"nav\"\n              class=\"items-center content-start mr-auto lg:justify-end lg:flex\"\n              on:click={handleClick}\n            >\n              <li class=\"nav-item ml-5 lg:ml-11\">\n                <a class=\"mb-5\" href=\"/\">Home</a>\n              </li>\n              <li class=\"nav-item ml-5 lg:ml-11\">\n                <a class=\"mb-5\" href=\"/blog\">Blog</a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </div>\n  </div>\n</header>\n\n<style lang=\"postcss\">\n  .active .toggler-icon:nth-child(2) {\n    opacity: 0;\n  }\n  .toggler-icon {\n    @apply block relative;\n    background-color: rgba(56, 66, 77, 1);\n    transition-duration: 300ms;\n    height: 2px;\n    width: 30px;\n    margin: 6px 0;\n  }\n  .active .toggler-icon:nth-child(1) {\n    --tw-translate-x: 0;\n    --tw-translate-y: 0;\n    --tw-rotate: 0;\n    --tw-skew-x: 0;\n    --tw-skew-y: 0;\n    --tw-scale-x: 1;\n    --tw-scale-y: 1;\n    transform: translateX(var(--tw-translate-x))\n      translateY(var(--tw-translate-y)) rotate(var(--tw-rotate))\n      skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))\n      scaleY(var(--tw-scale-y));\n    --tw-rotate: 45deg;\n    top: 7px;\n  }\n  .active .toggler-icon:nth-child(3) {\n    top: -8px;\n    transform: rotate(135deg);\n  }\n</style>\n","<script lang=\"ts\">\n  import type { SocialIcons } from \"./Footer.svelte\";\n\n  export let icons: SocialIcons[] = [];\n</script>\n\n<footer\n  class=\"container mx-auto pt-3 pb-6 border-t-2 border-solid border-white border-opacity-10 sm:flex justify-between\"\n>\n  <div class=\"pt-4 mx-3 text-center\">\n    {#if icons.length !== 0}\n      <ul class=\"flex justify-center sm:justify-start\">\n        {#each icons as icon}\n          <li class=\"mr-3\">\n            <a href={icon.url} title={icon.title}>{@html icon.content}</a>\n          </li>\n        {/each}\n      </ul>\n    {/if}\n  </div>\n  <div class=\"footer_copyright_content pt-4 text-center\">\n    <p class=\"text-gray-400\">\n      Crafted by <a\n        href=\"/\"\n        rel=\"nofollow\"\n        title=\"author\"\n        class=\"text-gray-400 hover:text-gray-700\">mcseptian</a\n      >\n    </p>\n  </div>\n</footer>\n","<script lang=\"ts\">\n  import { Route } from \"svelte-router-spa\";\n  import Navbar from \"../components/Navbar\";\n  import Footer from \"../components/Footer\";\n\n  export let currentRoute;\n  export let params = {};\n  export let socialIcons = [\n    {\n      kind: \"github\",\n      url: \"https://github.com/mcseptian/\",\n      title: \"github\",\n      content:\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-github\"><path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"/></svg>',\n    },\n  ];\n</script>\n\n<div>\n  <Navbar name=\"ian\" />\n  <main class=\"container flex h-full w-full flex-grow mx-auto\">\n    <Route {currentRoute} {params} />\n  </main>\n  <Footer icons={socialIcons} />\n</div>\n","import { Index, NotFound } from \"../components/Page\";\nimport Blog from \"../components/Blog\";\nimport MainLayout from \"../layout\";\n\nconst routes = [\n  {\n    name: \"/\",\n    path: \"/\",\n    component: Index,\n    layout: MainLayout,\n  },\n  {\n    name: \"blog\",\n    path: \"/blog\",\n    component: Blog,\n    layout: MainLayout,\n  },\n  { name: \"404\", path: \"*\", component: NotFound },\n];\n\nexport { routes };\n","<script>\n  //App.svelte\n  import { QueryClient, QueryClientProvider } from \"@sveltestack/svelte-query\";\n  import { Router } from \"svelte-router-spa\";\n  import { routes } from \"./routes/index\";\n\n  // Create a client\n  const queryClient = new QueryClient();\n</script>\n\n<QueryClientProvider client={queryClient}>\n  <Router {routes} />\n</QueryClientProvider>\n\n<style global lang=\"postcss\">\n  @tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n</style>\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","toggle_class","toggle","classList","set_current_component","get_current_component","Error","onMount","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","Subscribable","constructor","listeners","listener","onSubscribe","x","onUnsubscribe","hasListeners","isServer","window","isValidTimeout","Infinity","ensureQueryKeyArray","isArray","timeUntilStale","updatedAt","staleTime","Math","max","Date","now","parseQueryArgs","arg1","arg2","arg3","isQueryKey","queryKey","queryFn","parseFilterArgs","matchQuery","filters","query","active","exact","fetching","inactive","predicate","stale","queryHash","hashQueryKeyByOptions","partialMatchKey","queryStatusFilter","mapQueryStatusFilter","isActive","isStale","isFetching","matchMutation","mutation","mutationKey","hashQueryKey","state","status","queryKeyHashFn","asArray","JSON","stringify","_","val","isPlainObject","sort","reduce","result","key","partialDeepEqual","some","replaceEqualDeep","array","aSize","bItems","bSize","copy","equalItems","hasObjectPrototype","ctor","prot","prototype","hasOwnProperty","toString","call","scheduleMicrotask","catch","error","setTimeout","getAbortController","AbortController","focusManager","super","setup","onFocus","cleanup","setEventListener","_a","undefined","focused","setFocused","isFocused","includes","visibilityState","onlineManager","onOnline","online","setOnline","isOnline","navigator","onLine","defaultRetryDelay","failureCount","min","isCancelable","cancel","CancelledError","revert","silent","isCancelledError","Retryer","config","cancelFn","continueFn","promiseResolve","promiseReject","cancelRetry","abort","cancelOptions","continueRetry","continue","isPaused","isResolved","isTransportCancelable","promise","outerResolve","outerReject","onSuccess","reject","onError","pause","continueResolve","onPause","onContinue","promiseOrValue","_b","_c","retry","retryDelay","delay","shouldRetry","timeout","onFail","notifyManager","queue","transactions","notifyFn","batchNotifyFn","batch","schedule","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","logger","console","getLogger","Query","abortSignalConsumed","hadObservers","defaultOptions","setOptions","observers","cache","initialState","getDefaultState","meta","scheduleGc","cacheTime","setDefaultOptions","clearGcTimeout","gcTimeout","optionalRemove","clearTimeout","remove","setData","updater","prevData","input","functionalUpdate","isDataEqual","structuralSharing","dispatch","dataUpdatedAt","setState","setStateOptions","retryer","destroy","reset","observer","enabled","isInvalidated","getCurrentResult","isStaleByTime","find","shouldFetchOnWindowFocus","refetch","shouldFetchOnReconnect","addObserver","notify","removeObserver","getObserversCount","invalidate","fetch","fetchOptions","_d","_e","_f","cancelRefetch","abortController","queryFnContext","pageParam","defineProperty","enumerable","get","signal","fetchFn","behavior","onFetch","revertState","fetchMeta","bind","action","reducer","onQueryUpdate","initialData","initialDataUpdatedAt","hasData","dataUpdateCount","errorUpdateCount","errorUpdatedAt","fetchFailureCount","QueryObserver","client","trackedProps","previousSelectError","bindMethods","currentQuery","shouldFetchOnMount","executeFetch","updateTimers","refetchOnReconnect","refetchOnWindowFocus","clearTimers","notifyOptions","prevOptions","prevQuery","defaultQueryObserverOptions","updateQuery","mounted","shouldFetchOptionally","updateResult","updateStaleTimeout","nextRefetchInterval","computeRefetchInterval","currentRefetchInterval","updateRefetchInterval","updateOptions","mergedOptions","getOptimisticResult","defaultedOptions","getQueryCache","build","createResult","currentResult","trackResult","trackedResult","trackProp","configurable","useErrorBoundary","suspense","getNextResult","isError","throwOnError","getCurrentQuery","refetchPage","fetchOptimistic","clearStaleTimeout","staleTimeoutId","refetchInterval","nextInterval","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","isPreviousData","isPlaceholderData","optimisticResults","fetchOnMount","fetchOptionally","keepPreviousData","isSuccess","select","previousSelect","selectError","placeholderData","isLoading","isIdle","isFetched","isFetchedAfterMount","isRefetching","isLoadingError","isRefetchError","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","typedKey","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","_g","_h","onSettled","retryOnMount","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","QueryCache","queries","queriesMap","defaultQueryOptions","getQueryDefaults","queryInMap","getAll","findAll","Mutation","mutationId","mutationCache","variables","execute","restored","onMutate","executeMutation","mutationFn","onMutationUpdate","MutationCache","mutations","defaultMutationOptions","getMutationDefaults","resumePausedMutations","pausedMutations","getNextPageParam","pages","QueryClient","queryCache","queryDefaults","mutationDefaults","mount","unsubscribeFocus","unsubscribeOnline","unmount","isMutating","getQueryData","getQueriesData","queryKeyOrFilters","setQueryData","parsedOptions","setQueriesData","getQueryState","removeQueries","resetQueries","refetchFilters","refetchQueries","cancelQueries","promises","all","invalidateQueries","refetchActive","refetchInactive","fetchQuery","prefetchQuery","fetchInfiniteQuery","fetchMore","isFetchingNextPage","direction","isFetchingPreviousPage","oldPages","oldPageParams","pageParams","abortSignal","newPageParams","cancelled","buildNewPages","param","page","previous","fetchPage","manual","queryFnResult","getPreviousPageParam","shouldFetchFirstPage","finalPromise","prefetchInfiniteQuery","cancelMutations","getMutationCache","getDefaultOptions","setQueryDefaults","setMutationDefaults","_defaulted","slot_ctx","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","set","useQueryClient","queryClient","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","size","setBatchCalls","useQuery","setEnabled","activeRoute","UrlParser","urlString","namedUrl","urlBase","URL","namedParamsWithIndex","getPathNames","validParams","pathNames","pathname","pathName","trim","split","freeze","hash","host","hostname","namedParams","allPathName","values","paramKey","namedParamsKeys","namedParamsValues","port","protocol","search","queryParams","params","searchParams","queryParamsKeys","_value","queryParamsValues","anyEmptyNestedRoutes","routeObject","childRoute","compareRoutes","routeName","removeSlash","startsWith","findLocalisedRoute","route","language","exists","lang","entries","nameToPath","toLowerCase","position","replace","routeNameLocalised","RouterCurrent","trackPage","trackPageview","pushActiveRoute","newRoute","updateBrowserHistory","pathAndSearch","currentRoute","path","join","pathWithQueryParams","history","pushState","gaTracking","newPage","ga","queryPath","includePath","activeRoutePath","setActive","RouterRedirect","currentPath","guard","onlyIf","guardInfo","valid","redirect","redirectPath","destinationUrl","RouterGuard","redirectTo","RouterPath","basePath","basePathName","convert","currentLanguage","updatedPathRoute","routePathLanguage","localisedPathName","localisedRouteWithoutNamedParams","basePathNameWithoutNamedParams","basePathSameAsLocalised","updatedPath","basePathResult","localisedRoute","routeNames","shift","currentPathName","updateRoutePath","namedPath","localisedPath","routeLanguage","routePath","routePathValue","basePathNames","names","removeExtraPaths","getNamedParams","RouterFinder","routes","currentUrl","routerOptions","defaultLanguage","sitePrefix","prefix","urlParser","replacePattern","endsWith","noPrefixUrl","parseCurrentUrl","routeNamedParams","staticParamMatch","searchActiveRoutes","routerPath","startsWithNamedParam","matchRoute","routerRoute","routeInfo","parsedParams","layout","RouterRoute","setCurrentRoute","nestedRoutes","nestedRoutesAndNoPath","indexRoute","routeNotFound","customLanguage","custom404Page","findActiveRoute","searchActiveRoute","NotFoundPage","routerCurrent","userDefinedRoutes","SpaRouter","location","href","gaPageviews","langConvertTo","setActiveRoute","navigateTo","navigateNow","localName","metaKey","ctrlKey","shiftKey","targetHostNameInternal","prefixMatchPath","preventDefault","open","onpopstate","_event","navigatePathname","user","toLocaleString","weekday","label","url","link","title","content","published","toDateString","replies","totalItems","labels","article","items","message","queryResult","async","response","baseURI","URLSearchParams","ok","json","getPost","element_src","buttonClose","icons","socialIcons","kind","MainLayout","body"],"mappings":"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"}